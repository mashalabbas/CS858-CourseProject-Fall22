Class Name,API Name,Number of Input Parameters_x,Number of Input Parameters_y,_merge
NotificationManagerService,addAutomaticZenRule,2,2,both
NotificationManagerService,applyRestore,3,3,both
NotificationManagerService,areChannelsBypassingDnd,1,1,both
NotificationManagerService,areNotificationsEnabled,2,2,both
NotificationManagerService,areNotificationsEnabledForPackage,3,3,both
NotificationManagerService,canShowBadge,3,3,both
NotificationManagerService,cancelAllNotifications,3,3,both
NotificationManagerService,cancelNotificationWithTag,5,5,both
NotificationManagerService,cancelToast,3,3,both
NotificationManagerService,clearData,4,4,both
NotificationManagerService,createNotificationChannelGroups,3,3,both
NotificationManagerService,createNotificationChannels,3,3,both
NotificationManagerService,createNotificationChannelsForPackage,4,4,both
NotificationManagerService,deleteNotificationChannel,3,3,both
NotificationManagerService,deleteNotificationChannelGroup,3,3,both
NotificationManagerService,enqueueNotificationWithTag,7,7,both
NotificationManagerService,enqueueToast,4,4,both
NotificationManagerService,finishToken,3,3,both
NotificationManagerService,getActiveNotifications,2,2,both
NotificationManagerService,getAppActiveNotifications,3,3,both
NotificationManagerService,getAutomaticZenRule,2,2,both
NotificationManagerService,getBackupPayload,2,2,both
NotificationManagerService,getBlockedAppCount,2,2,both
NotificationManagerService,getBlockedChannelCount,3,3,both
NotificationManagerService,getDeletedChannelCount,3,3,both
NotificationManagerService,getEffectsSuppressor,1,1,both
NotificationManagerService,getEnabledNotificationListenerPackages,1,1,both
NotificationManagerService,getEnabledNotificationListeners,2,2,both
NotificationManagerService,getHistoricalNotifications,3,3,both
NotificationManagerService,getNotificationChannel,3,3,both
NotificationManagerService,getNotificationChannelForPackage,5,5,both
NotificationManagerService,getNotificationChannelGroup,3,3,both
NotificationManagerService,getNotificationChannelGroupForPackage,4,4,both
NotificationManagerService,getNotificationChannelGroups,2,2,both
NotificationManagerService,getNotificationChannelGroupsForPackage,4,4,both
NotificationManagerService,getNotificationChannels,2,2,both
NotificationManagerService,getNotificationChannelsForPackage,4,4,both
NotificationManagerService,getNotificationPolicy,2,2,both
NotificationManagerService,getNumNotificationChannelsForPackage,4,4,both
NotificationManagerService,getPackageImportance,2,2,both
NotificationManagerService,getPopulatedNotificationChannelGroupForPackage,5,5,both
NotificationManagerService,getRecentNotifyingAppsForUser,2,2,both
NotificationManagerService,getRuleInstanceCount,2,2,both
NotificationManagerService,getZenMode,1,1,both
NotificationManagerService,getZenModeConfig,1,1,both
NotificationManagerService,getZenRules,1,1,both
NotificationManagerService,isNotificationAssistantAccessGranted,2,2,both
NotificationManagerService,isNotificationListenerAccessGranted,2,2,both
NotificationManagerService,isNotificationListenerAccessGrantedForUser,3,3,both
NotificationManagerService,isNotificationPolicyAccessGranted,2,2,both
NotificationManagerService,isNotificationPolicyAccessGrantedForPackage,2,2,both
NotificationManagerService,isSystemConditionProviderEnabled,2,2,both
NotificationManagerService,matchesCallFilter,2,2,both
NotificationManagerService,onlyHasDefaultChannel,3,3,both
NotificationManagerService,removeAutomaticZenRule,2,2,both
NotificationManagerService,removeAutomaticZenRules,2,2,both
NotificationManagerService,requestBindListener,2,2,both
NotificationManagerService,requestBindProvider,2,2,both
NotificationManagerService,setInterruptionFilter,3,3,both
NotificationManagerService,setNotificationAssistantAccessGranted,3,3,both
NotificationManagerService,setNotificationAssistantAccessGrantedForUser,4,4,both
NotificationManagerService,setNotificationListenerAccessGranted,3,3,both
NotificationManagerService,setNotificationListenerAccessGrantedForUser,4,4,both
NotificationManagerService,setNotificationPolicy,3,3,both
NotificationManagerService,setNotificationPolicyAccessGranted,3,3,both
NotificationManagerService,setNotificationPolicyAccessGrantedForUser,4,4,both
NotificationManagerService,setNotificationsEnabledForPackage,4,4,both
NotificationManagerService,setNotificationsEnabledWithImportanceLockForPackage,4,4,both
NotificationManagerService,setShowBadge,4,4,both
NotificationManagerService,setZenMode,4,4,both
NotificationManagerService,updateAutomaticZenRule,3,3,both
NotificationManagerService,updateNotificationChannelForPackage,4,4,both
NotificationManagerService,updateNotificationChannelGroupForPackage,4,4,both
RttService,cancelRanging,2,,left_only
RttService,isAvailable,1,,left_only
RttService,startRanging,6,,left_only
CompanionDeviceManagerService,associate,4,4,both
CompanionDeviceManagerService,disassociate,3,3,both
CompanionDeviceManagerService,getAssociations,3,3,both
CompanionDeviceManagerService,hasNotificationAccess,2,2,both
CompanionDeviceManagerService,requestNotificationAccess,2,2,both
CompanionDeviceManagerService,stopScan,4,4,both
UsbService$Lifecycle,allowUsbDebugging,3,3,both
UsbService$Lifecycle,clearDefaults,3,3,both
UsbService$Lifecycle,clearUsbDebuggingKeys,1,1,both
UsbService$Lifecycle,denyUsbDebugging,1,1,both
UsbService$Lifecycle,getControlFd,2,2,both
UsbService$Lifecycle,getCurrentAccessory,1,1,both
UsbService$Lifecycle,getCurrentFunctions,1,1,both
UsbService$Lifecycle,getDeviceList,2,2,both
UsbService$Lifecycle,getPortStatus,2,2,both
UsbService$Lifecycle,getPorts,1,1,both
UsbService$Lifecycle,getScreenUnlockedFunctions,1,1,both
UsbService$Lifecycle,grantAccessoryPermission,3,3,both
UsbService$Lifecycle,grantDevicePermission,3,3,both
UsbService$Lifecycle,hasAccessoryPermission,2,2,both
UsbService$Lifecycle,hasDefaults,3,3,both
UsbService$Lifecycle,hasDevicePermission,3,3,both
UsbService$Lifecycle,isFunctionEnabled,2,2,both
UsbService$Lifecycle,openAccessory,2,2,both
UsbService$Lifecycle,openDevice,3,3,both
UsbService$Lifecycle,requestAccessoryPermission,4,4,both
UsbService$Lifecycle,requestDevicePermission,4,4,both
UsbService$Lifecycle,setAccessoryPackage,4,4,both
UsbService$Lifecycle,setCurrentFunction,3,3,both
UsbService$Lifecycle,setCurrentFunctions,2,2,both
UsbService$Lifecycle,setDevicePackage,4,4,both
UsbService$Lifecycle,setPortRoles,4,4,both
UsbService$Lifecycle,setScreenUnlockedFunctions,2,2,both
UsbService$Lifecycle,setUsbDeviceConnectionHandler,2,2,both
WifiScanningService,getAvailableChannels,2,2,both
WifiScanningService,getMessenger,1,1,both
LockSettingsService$Lifecycle,verifyCredential,7,7,both
LockSettingsService$Lifecycle,verifyCredential,7,5,both
LockSettingsService$Lifecycle,verifyCredential,5,7,both
LockSettingsService$Lifecycle,verifyCredential,5,5,both
LockSettingsService$Lifecycle,checkCredential,5,5,both
LockSettingsService$Lifecycle,checkVoldPassword,2,2,both
LockSettingsService$Lifecycle,closeSession,2,2,both
LockSettingsService$Lifecycle,generateKey,2,2,both
LockSettingsService$Lifecycle,getBoolean,4,4,both
LockSettingsService$Lifecycle,getHashFactor,3,3,both
LockSettingsService$Lifecycle,getKey,2,2,both
LockSettingsService$Lifecycle,getKeyChainSnapshot,1,1,both
LockSettingsService$Lifecycle,getLong,4,4,both
LockSettingsService$Lifecycle,getRecoverySecretTypes,1,1,both
LockSettingsService$Lifecycle,getRecoveryStatus,1,1,both
LockSettingsService$Lifecycle,getSeparateProfileChallengeEnabled,2,2,both
LockSettingsService$Lifecycle,getString,4,4,both
LockSettingsService$Lifecycle,getStrongAuthForUser,2,2,both
LockSettingsService$Lifecycle,havePassword,2,2,both
LockSettingsService$Lifecycle,havePattern,2,2,both
LockSettingsService$Lifecycle,importKey,3,3,both
LockSettingsService$Lifecycle,recoverKeyChainSnapshot,4,4,both
LockSettingsService$Lifecycle,registerStrongAuthTracker,2,2,both
LockSettingsService$Lifecycle,removeKey,2,2,both
LockSettingsService$Lifecycle,requireStrongAuth,3,3,both
LockSettingsService$Lifecycle,resetKeyStore,2,2,both
LockSettingsService$Lifecycle,setBoolean,4,4,both
LockSettingsService$Lifecycle,setLockCredential,6,6,both
LockSettingsService$Lifecycle,setLong,4,4,both
LockSettingsService$Lifecycle,setRecoverySecretTypes,2,2,both
LockSettingsService$Lifecycle,setRecoveryStatus,3,3,both
LockSettingsService$Lifecycle,setSeparateProfileChallengeEnabled,4,4,both
LockSettingsService$Lifecycle,setServerParams,2,2,both
LockSettingsService$Lifecycle,setSnapshotCreatedPendingIntent,2,2,both
LockSettingsService$Lifecycle,setString,4,4,both
LockSettingsService$Lifecycle,systemReady,1,1,both
LockSettingsService$Lifecycle,unregisterStrongAuthTracker,2,2,both
LockSettingsService$Lifecycle,userPresent,2,2,both
LockSettingsService$Lifecycle,verifyTiedProfileChallenge,5,5,both
LauncherAppsService,addOnAppsChangedListener,3,3,both
LauncherAppsService,getShortcutIconFd,5,5,both
LauncherAppsService,getShortcutIconResId,5,5,both
LauncherAppsService,hasShortcutHostPermission,2,2,both
LauncherAppsService,removeOnAppsChangedListener,2,2,both
LauncherAppsService,startShortcut,7,7,both
TrustManagerService,clearAllFingerprints,1,1,both
TrustManagerService,isDeviceLocked,2,2,both
TrustManagerService,isDeviceSecure,2,2,both
TrustManagerService,isTrustUsuallyManaged,2,2,both
TrustManagerService,registerTrustListener,2,2,both
TrustManagerService,reportEnabledTrustAgentsChanged,2,2,both
TrustManagerService,reportKeyguardShowingChanged,1,1,both
TrustManagerService,reportUnlockAttempt,3,3,both
TrustManagerService,reportUnlockLockout,3,3,both
TrustManagerService,setDeviceLockedForUser,3,3,both
TrustManagerService,unlockedByFingerprintForUser,2,2,both
TrustManagerService,unregisterTrustListener,2,2,both
DisplayManagerService,connectWifiDisplay,2,2,both
DisplayManagerService,createVirtualDisplay,11,11,both
DisplayManagerService,disconnectWifiDisplay,1,1,both
DisplayManagerService,forgetWifiDisplay,2,2,both
DisplayManagerService,getAmbientBrightnessStats,1,1,both
DisplayManagerService,getBrightnessConfigurationForUser,2,2,both
DisplayManagerService,getBrightnessEvents,2,2,both
DisplayManagerService,getDefaultBrightnessConfiguration,1,1,both
DisplayManagerService,getDisplayIds,1,1,both
DisplayManagerService,getDisplayInfo,2,2,both
DisplayManagerService,getMinimumBrightnessCurve,1,1,both
DisplayManagerService,getStableDisplaySize,1,1,both
DisplayManagerService,getWifiDisplayStatus,1,1,both
DisplayManagerService,pauseWifiDisplay,1,1,both
DisplayManagerService,registerCallback,2,2,both
DisplayManagerService,releaseVirtualDisplay,2,2,both
DisplayManagerService,renameWifiDisplay,3,3,both
DisplayManagerService,requestColorMode,3,3,both
DisplayManagerService,resizeVirtualDisplay,5,5,both
DisplayManagerService,resumeWifiDisplay,1,1,both
DisplayManagerService,setBrightnessConfigurationForUser,4,4,both
DisplayManagerService,setSaturationLevel,2,2,both
DisplayManagerService,setTemporaryAutoBrightnessAdjustment,2,2,both
DisplayManagerService,setTemporaryBrightness,2,2,both
DisplayManagerService,setVirtualDisplaySurface,3,3,both
DisplayManagerService,startWifiDisplayScan,1,1,both
DisplayManagerService,stopWifiDisplayScan,1,1,both
CrossProfileAppsService,getTargetUserProfiles,2,2,both
BroadcastRadioService,addAnnouncementListener,3,3,both
BroadcastRadioService,listModules,1,1,both
BroadcastRadioService,openTuner,5,5,both
MediaProjectionManagerService,addCallback,2,2,both
MediaProjectionManagerService,createProjection,5,5,both
MediaProjectionManagerService,getActiveProjectionInfo,1,1,both
MediaProjectionManagerService,hasProjectionPermission,3,3,both
MediaProjectionManagerService,isValidMediaProjection,2,2,both
MediaProjectionManagerService,removeCallback,2,2,both
MediaProjectionManagerService,stopActiveProjection,1,1,both
JobSchedulerService,cancel,2,2,both
JobSchedulerService,cancelAll,1,1,both
JobSchedulerService,enqueue,3,3,both
JobSchedulerService,getAllPendingJobs,1,1,both
JobSchedulerService,getPendingJob,2,2,both
JobSchedulerService,schedule,2,2,both
JobSchedulerService,scheduleAsPackage,5,5,both
MediaResourceMonitorService,notifyResourceGranted,3,3,both
ClipboardService,addPrimaryClipChangedListener,3,3,both
ClipboardService,clearPrimaryClip,2,2,both
ClipboardService,getPrimaryClip,2,2,both
ClipboardService,getPrimaryClipDescription,2,2,both
ClipboardService,hasClipboardText,2,2,both
ClipboardService,hasPrimaryClip,2,2,both
ClipboardService,removePrimaryClipChangedListener,2,2,both
ClipboardService,setPrimaryClip,3,3,both
AccountManagerService$Lifecycle,getAccounts,2,2,both
AccountManagerService$Lifecycle,getAccounts,2,3,both
AccountManagerService$Lifecycle,getAccounts,2,3,both
AccountManagerService$Lifecycle,getAccounts,3,2,both
AccountManagerService$Lifecycle,getAccounts,3,3,both
AccountManagerService$Lifecycle,getAccounts,3,3,both
AccountManagerService$Lifecycle,getAccounts,3,2,both
AccountManagerService$Lifecycle,getAccounts,3,3,both
AccountManagerService$Lifecycle,getAccounts,3,3,both
AccountManagerService$Lifecycle,getAccountsAndVisibilityForPackage,5,5,both
AccountManagerService$Lifecycle,getAccountsAndVisibilityForPackage,5,3,both
AccountManagerService$Lifecycle,getAccountsAndVisibilityForPackage,3,5,both
AccountManagerService$Lifecycle,getAccountsAndVisibilityForPackage,3,3,both
AccountManagerService$Lifecycle,hasAccountAccess,4,4,both
AccountManagerService$Lifecycle,hasAccountAccess,4,4,both
AccountManagerService$Lifecycle,hasAccountAccess,4,4,both
AccountManagerService$Lifecycle,hasAccountAccess,4,4,both
AccountManagerService$Lifecycle,registerAccountListener,4,4,both
AccountManagerService$Lifecycle,registerAccountListener,4,3,both
AccountManagerService$Lifecycle,registerAccountListener,3,4,both
AccountManagerService$Lifecycle,registerAccountListener,3,3,both
AccountManagerService$Lifecycle,removeSharedAccountAsUser,4,4,both
AccountManagerService$Lifecycle,removeSharedAccountAsUser,4,3,both
AccountManagerService$Lifecycle,removeSharedAccountAsUser,3,4,both
AccountManagerService$Lifecycle,removeSharedAccountAsUser,3,3,both
AccountManagerService$Lifecycle,setAccountVisibility,6,6,both
AccountManagerService$Lifecycle,setAccountVisibility,6,4,both
AccountManagerService$Lifecycle,setAccountVisibility,4,6,both
AccountManagerService$Lifecycle,setAccountVisibility,4,4,both
AccountManagerService$Lifecycle,unregisterAccountListener,4,4,both
AccountManagerService$Lifecycle,unregisterAccountListener,4,3,both
AccountManagerService$Lifecycle,unregisterAccountListener,3,4,both
AccountManagerService$Lifecycle,unregisterAccountListener,3,3,both
AccountManagerService$Lifecycle,accountAuthenticated,2,2,both
AccountManagerService$Lifecycle,addAccount,7,7,both
AccountManagerService$Lifecycle,addAccountAsUser,8,8,both
AccountManagerService$Lifecycle,addAccountExplicitly,4,4,both
AccountManagerService$Lifecycle,addAccountExplicitlyWithVisibility,5,5,both
AccountManagerService$Lifecycle,addSharedAccountsFromParentUser,4,4,both
AccountManagerService$Lifecycle,clearPassword,2,2,both
AccountManagerService$Lifecycle,confirmCredentialsAsUser,6,6,both
AccountManagerService$Lifecycle,copyAccountToUser,5,5,both
AccountManagerService$Lifecycle,editProperties,4,4,both
AccountManagerService$Lifecycle,finishSessionAsUser,6,6,both
AccountManagerService$Lifecycle,getAccountByTypeAndFeatures,5,5,both
AccountManagerService$Lifecycle,getAccountVisibility,3,3,both
AccountManagerService$Lifecycle,getAccountsAsUser,4,4,both
AccountManagerService$Lifecycle,getAccountsByFeatures,5,5,both
AccountManagerService$Lifecycle,getAccountsByTypeForPackage,4,4,both
AccountManagerService$Lifecycle,getAccountsForPackage,4,4,both
AccountManagerService$Lifecycle,getAuthToken,7,7,both
AccountManagerService$Lifecycle,getAuthTokenLabel,4,4,both
AccountManagerService$Lifecycle,getAuthenticatorTypes,2,2,both
AccountManagerService$Lifecycle,getPackagesAndVisibilityForAccount,2,2,both
AccountManagerService$Lifecycle,getPassword,2,2,both
AccountManagerService$Lifecycle,getPreviousName,2,2,both
AccountManagerService$Lifecycle,getSharedAccountsAsUser,2,2,both
AccountManagerService$Lifecycle,getUserData,3,3,both
AccountManagerService$Lifecycle,hasFeatures,5,5,both
AccountManagerService$Lifecycle,invalidateAuthToken,3,3,both
AccountManagerService$Lifecycle,isCredentialsUpdateSuggested,4,4,both
AccountManagerService$Lifecycle,onAccountAccessed,2,2,both
AccountManagerService$Lifecycle,peekAuthToken,3,3,both
AccountManagerService$Lifecycle,removeAccount,4,4,both
AccountManagerService$Lifecycle,removeAccountAsUser,5,5,both
AccountManagerService$Lifecycle,removeAccountExplicitly,2,2,both
AccountManagerService$Lifecycle,renameAccount,4,4,both
AccountManagerService$Lifecycle,renameSharedAccountAsUser,4,4,both
AccountManagerService$Lifecycle,setAuthToken,4,4,both
AccountManagerService$Lifecycle,setPassword,3,3,both
AccountManagerService$Lifecycle,setUserData,4,4,both
AccountManagerService$Lifecycle,someUserHasAccount,2,2,both
AccountManagerService$Lifecycle,startAddAccountSession,7,7,both
AccountManagerService$Lifecycle,startUpdateCredentialsSession,6,6,both
AccountManagerService$Lifecycle,updateAppPermission,5,5,both
AccountManagerService$Lifecycle,updateCredentials,6,6,both
HdmiControlService,addDeviceEventListener,2,2,both
HdmiControlService,addHdmiMhlVendorCommandListener,2,2,both
HdmiControlService,addHotplugEventListener,2,2,both
HdmiControlService,addSystemAudioModeChangeListener,2,2,both
HdmiControlService,addVendorCommandListener,3,3,both
HdmiControlService,canChangeSystemAudioMode,1,1,both
HdmiControlService,clearTimerRecording,4,4,both
HdmiControlService,deviceSelect,3,3,both
HdmiControlService,getActiveSource,1,1,both
HdmiControlService,getDeviceList,1,1,both
HdmiControlService,getInputDevices,1,1,both
HdmiControlService,getPortInfo,1,1,both
HdmiControlService,getSupportedTypes,1,1,both
HdmiControlService,getSystemAudioMode,1,1,both
HdmiControlService,oneTouchPlay,2,2,both
HdmiControlService,portSelect,3,3,both
HdmiControlService,queryDisplayStatus,2,2,both
HdmiControlService,removeHotplugEventListener,2,2,both
HdmiControlService,removeSystemAudioModeChangeListener,2,2,both
HdmiControlService,sendKeyEvent,4,4,both
HdmiControlService,sendMhlVendorCommand,5,5,both
HdmiControlService,sendStandby,3,3,both
HdmiControlService,sendVendorCommand,5,5,both
HdmiControlService,setArcMode,2,2,both
HdmiControlService,setHdmiRecordListener,2,2,both
HdmiControlService,setInputChangeListener,2,2,both
HdmiControlService,setProhibitMode,2,2,both
HdmiControlService,setStandbyMode,2,2,both
HdmiControlService,setSystemAudioMode,3,3,both
HdmiControlService,setSystemAudioMute,2,2,both
HdmiControlService,setSystemAudioVolume,4,4,both
HdmiControlService,startOneTouchRecord,3,3,both
HdmiControlService,startTimerRecording,4,4,both
HdmiControlService,stopOneTouchRecord,2,2,both
StorageStatsService$Lifecycle,getCacheBytes,3,3,both
StorageStatsService$Lifecycle,getCacheQuotaBytes,4,4,both
StorageStatsService$Lifecycle,getFreeBytes,3,3,both
StorageStatsService$Lifecycle,getTotalBytes,3,3,both
StorageStatsService$Lifecycle,isQuotaSupported,3,3,both
StorageStatsService$Lifecycle,isReservedSupported,3,3,both
StorageStatsService$Lifecycle,queryExternalStatsForUser,4,4,both
StorageStatsService$Lifecycle,queryStatsForPackage,5,5,both
StorageStatsService$Lifecycle,queryStatsForUid,4,4,both
StorageStatsService$Lifecycle,queryStatsForUser,4,4,both
RulesManagerService$Lifecycle,getRulesState,1,1,both
RulesManagerService$Lifecycle,requestInstall,4,4,both
RulesManagerService$Lifecycle,requestNothing,3,3,both
RulesManagerService$Lifecycle,requestUninstall,3,3,both
WifiAwareService,connect,6,6,both
WifiAwareService,disconnect,3,3,both
WifiAwareService,getCharacteristics,1,1,both
WifiAwareService,isUsageEnabled,1,1,both
WifiAwareService,publish,5,5,both
WifiAwareService,requestMacAddresses,4,4,both
WifiAwareService,sendMessage,7,7,both
WifiAwareService,subscribe,5,5,both
WifiAwareService,terminateSession,3,3,both
WifiAwareService,updatePublish,4,4,both
WifiAwareService,updateSubscribe,4,4,both
OtaDexoptService,cleanup,1,1,both
OtaDexoptService,dexoptNextPackage,1,1,both
OtaDexoptService,getProgress,1,1,both
OtaDexoptService,isDone,1,1,both
OtaDexoptService,nextDexoptCommand,1,1,both
OtaDexoptService,prepare,1,1,both
SliceManagerService$Lifecycle,applyRestore,3,3,both
SliceManagerService$Lifecycle,checkSlicePermission,6,6,both
SliceManagerService$Lifecycle,getBackupPayload,2,2,both
SliceManagerService$Lifecycle,getPinnedSlices,2,2,both
SliceManagerService$Lifecycle,getPinnedSpecs,3,3,both
SliceManagerService$Lifecycle,grantPermissionFromUser,5,5,both
SliceManagerService$Lifecycle,grantSlicePermission,4,4,both
SliceManagerService$Lifecycle,hasSliceAccess,2,2,both
SliceManagerService$Lifecycle,pinSlice,5,5,both
SliceManagerService$Lifecycle,revokeSlicePermission,4,4,both
SliceManagerService$Lifecycle,unpinSlice,4,4,both
RestrictionsManagerService,createLocalApprovalIntent,1,1,both
RestrictionsManagerService,getApplicationRestrictions,2,2,both
RestrictionsManagerService,hasRestrictionsProvider,1,1,both
WifiService,acquireMulticastLock,3,3,both
WifiService,acquireWifiLock,5,5,both
WifiService,addOrUpdateNetwork,3,3,both
WifiService,addOrUpdatePasspointConfiguration,3,3,both
WifiService,deauthenticateNetwork,3,3,both
WifiService,disableEphemeralNetwork,3,3,both
WifiService,disableNetwork,3,3,both
WifiService,disconnect,2,2,both
WifiService,enableNetwork,4,4,both
WifiService,enableTdls,3,3,both
WifiService,enableTdlsWithMacAddress,3,3,both
WifiService,enableVerboseLogging,2,2,both
WifiService,enableWifiConnectivityManager,2,2,both
WifiService,factoryReset,2,2,both
WifiService,getAllMatchingWifiConfigs,2,2,both
WifiService,getConfiguredNetworks,1,1,both
WifiService,getConnectionInfo,2,2,both
WifiService,getCountryCode,1,1,both
WifiService,getCurrentNetwork,1,1,both
WifiService,getCurrentNetworkWpsNfcConfigurationToken,1,1,both
WifiService,getDhcpInfo,1,1,both
WifiService,getMatchingOsuProviders,2,2,both
WifiService,getMatchingWifiConfig,2,2,both
WifiService,getPasspointConfigurations,1,1,both
WifiService,getPrivilegedConfiguredNetworks,1,1,both
WifiService,getScanResults,2,2,both
WifiService,getSupportedFeatures,1,1,both
WifiService,getVerboseLoggingLevel,1,1,both
WifiService,getWifiApConfiguration,1,1,both
WifiService,getWifiApEnabledState,1,1,both
WifiService,getWifiEnabledState,1,1,both
WifiService,getWifiServiceMessenger,2,2,both
WifiService,isDualBandSupported,1,1,both
WifiService,isMulticastEnabled,1,1,both
WifiService,isScanAlwaysAvailable,1,1,both
WifiService,matchProviderWithCurrentNetwork,2,2,both
WifiService,needs5GHzToAnyApBandConversion,1,1,both
WifiService,notifyUserOfApBandConversion,2,2,both
WifiService,queryPasspointIcon,3,3,both
WifiService,reassociate,2,2,both
WifiService,reconnect,2,2,both
WifiService,registerSoftApCallback,4,4,both
WifiService,releaseMulticastLock,1,1,both
WifiService,releaseWifiLock,2,2,both
WifiService,removeNetwork,3,3,both
WifiService,removePasspointConfiguration,3,3,both
WifiService,reportActivityInfo,1,1,both
WifiService,requestActivityInfo,2,2,both
WifiService,restoreBackupData,2,2,both
WifiService,restoreSupplicantBackupData,3,3,both
WifiService,retrieveBackupData,1,1,both
WifiService,setCountryCode,2,2,both
WifiService,setWifiApConfiguration,3,3,both
WifiService,setWifiEnabled,3,3,both
WifiService,startLocalOnlyHotspot,4,4,both
WifiService,startScan,2,2,both
WifiService,startSoftAp,2,2,both
WifiService,startSubscriptionProvisioning,3,3,both
WifiService,startWatchLocalOnlyHotspot,3,3,both
WifiService,stopLocalOnlyHotspot,1,1,both
WifiService,stopSoftAp,1,1,both
WifiService,stopWatchLocalOnlyHotspot,1,1,both
WifiService,unregisterSoftApCallback,2,2,both
WifiService,updateInterfaceIpState,3,3,both
WifiService,updateWifiLockWorkSource,3,3,both
ShortcutService$Lifecycle,addDynamicShortcuts,4,4,both
ShortcutService$Lifecycle,applyRestore,3,3,both
ShortcutService$Lifecycle,createShortcutResultIntent,4,4,both
ShortcutService$Lifecycle,disableShortcuts,6,6,both
ShortcutService$Lifecycle,enableShortcuts,4,4,both
ShortcutService$Lifecycle,getBackupPayload,2,2,both
ShortcutService$Lifecycle,getDynamicShortcuts,3,3,both
ShortcutService$Lifecycle,getIconMaxDimensions,3,3,both
ShortcutService$Lifecycle,getManifestShortcuts,3,3,both
ShortcutService$Lifecycle,getMaxShortcutCountPerActivity,3,3,both
ShortcutService$Lifecycle,getPinnedShortcuts,3,3,both
ShortcutService$Lifecycle,getRateLimitResetTime,3,3,both
ShortcutService$Lifecycle,getRemainingCallCount,3,3,both
ShortcutService$Lifecycle,isRequestPinItemSupported,3,3,both
ShortcutService$Lifecycle,onApplicationActive,3,3,both
ShortcutService$Lifecycle,removeAllDynamicShortcuts,3,3,both
ShortcutService$Lifecycle,removeDynamicShortcuts,4,4,both
ShortcutService$Lifecycle,reportShortcutUsed,4,4,both
ShortcutService$Lifecycle,requestPinShortcut,5,5,both
ShortcutService$Lifecycle,resetThrottling,1,1,both
ShortcutService$Lifecycle,setDynamicShortcuts,4,4,both
ShortcutService$Lifecycle,updateShortcuts,4,4,both
BluetoothService,bindBluetoothProfileService,3,3,both
BluetoothService,disable,3,3,both
BluetoothService,enable,2,2,both
BluetoothService,enableNoAutoConnect,2,2,both
BluetoothService,getAddress,1,1,both
BluetoothService,getBluetoothGatt,1,1,both
BluetoothService,getName,1,1,both
BluetoothService,getState,1,1,both
BluetoothService,isBleAppPresent,1,1,both
BluetoothService,isBleScanAlwaysAvailable,1,1,both
BluetoothService,isEnabled,1,1,both
BluetoothService,registerAdapter,2,2,both
BluetoothService,registerStateChangeCallback,2,2,both
BluetoothService,unbindBluetoothProfileService,3,3,both
BluetoothService,unregisterAdapter,2,2,both
BluetoothService,unregisterStateChangeCallback,2,2,both
BluetoothService,updateBleAppCount,4,4,both
FingerprintService,addClientActiveCallback,2,2,both
FingerprintService,addLockoutResetCallback,2,2,both
FingerprintService,authenticate,9,9,both
FingerprintService,cancelAuthentication,3,3,both
FingerprintService,cancelEnrollment,2,2,both
FingerprintService,enroll,7,7,both
FingerprintService,enumerate,4,4,both
FingerprintService,getAuthenticatorId,2,2,both
FingerprintService,getEnrolledFingerprints,3,3,both
FingerprintService,hasEnrolledFingerprints,3,3,both
FingerprintService,isClientActive,1,1,both
FingerprintService,isHardwareDetected,3,3,both
FingerprintService,postEnroll,2,2,both
FingerprintService,preEnroll,2,2,both
FingerprintService,remove,6,6,both
FingerprintService,removeClientActiveCallback,2,2,both
FingerprintService,rename,4,4,both
FingerprintService,resetTimeout,2,2,both
FingerprintService,setActiveUser,2,2,both
OverlayManagerService,getAllOverlays,2,2,both
OverlayManagerService,getOverlayInfo,3,3,both
OverlayManagerService,getOverlayInfosForTarget,3,3,both
OverlayManagerService,setEnabled,4,4,both
OverlayManagerService,setEnabledExclusive,4,4,both
OverlayManagerService,setEnabledExclusiveInCategory,3,3,both
OverlayManagerService,setHighestPriority,3,3,both
OverlayManagerService,setLowestPriority,3,3,both
OverlayManagerService,setPriority,4,4,both
TvInputManagerService,acquireTvInputHardware,5,5,both
TvInputManagerService,addBlockedRating,3,3,both
TvInputManagerService,captureFrame,5,5,both
TvInputManagerService,createOverlayView,5,5,both
TvInputManagerService,createSession,6,6,both
TvInputManagerService,dispatchSurfaceChanged,6,6,both
TvInputManagerService,getAvailableTvStreamConfigList,3,3,both
TvInputManagerService,getBlockedRatings,2,2,both
TvInputManagerService,getDvbDeviceList,1,1,both
TvInputManagerService,getHardwareList,1,1,both
TvInputManagerService,getTvContentRatingSystemList,2,2,both
TvInputManagerService,getTvInputInfo,3,3,both
TvInputManagerService,getTvInputList,2,2,both
TvInputManagerService,getTvInputState,3,3,both
TvInputManagerService,isParentalControlsEnabled,2,2,both
TvInputManagerService,isRatingBlocked,3,3,both
TvInputManagerService,isSingleSessionActive,2,2,both
TvInputManagerService,openDvbDevice,3,3,both
TvInputManagerService,registerCallback,3,3,both
TvInputManagerService,relayoutOverlayView,4,4,both
TvInputManagerService,releaseSession,3,3,both
TvInputManagerService,releaseTvInputHardware,4,4,both
TvInputManagerService,removeBlockedRating,3,3,both
TvInputManagerService,removeOverlayView,3,3,both
TvInputManagerService,requestChannelBrowsable,3,3,both
TvInputManagerService,selectTrack,5,5,both
TvInputManagerService,sendAppPrivateCommand,5,5,both
TvInputManagerService,sendTvInputNotifyIntent,3,3,both
TvInputManagerService,setCaptionEnabled,4,4,both
TvInputManagerService,setMainSession,3,3,both
TvInputManagerService,setParentalControlsEnabled,3,3,both
TvInputManagerService,setSurface,4,4,both
TvInputManagerService,setVolume,4,4,both
TvInputManagerService,startRecording,4,4,both
TvInputManagerService,stopRecording,3,3,both
TvInputManagerService,timeShiftEnablePositionTracking,4,4,both
TvInputManagerService,timeShiftPause,3,3,both
TvInputManagerService,timeShiftPlay,4,4,both
TvInputManagerService,timeShiftResume,3,3,both
TvInputManagerService,timeShiftSeekTo,4,4,both
TvInputManagerService,timeShiftSetPlaybackParams,4,4,both
TvInputManagerService,tune,5,5,both
TvInputManagerService,unblockContent,4,4,both
TvInputManagerService,unregisterCallback,3,3,both
TvInputManagerService,updateTvInputInfo,3,3,both
SearchManagerService$Lifecycle,getGlobalSearchActivities,1,1,both
SearchManagerService$Lifecycle,getGlobalSearchActivity,1,1,both
SearchManagerService$Lifecycle,getSearchableInfo,2,2,both
SearchManagerService$Lifecycle,getSearchablesInGlobalSearch,1,1,both
SearchManagerService$Lifecycle,getWebSearchActivity,1,1,both
SearchManagerService$Lifecycle,launchAssist,2,2,both
SearchManagerService$Lifecycle,launchLegacyAssist,4,4,both
WifiP2pService,checkConfigureWifiDisplayPermission,1,,left_only
WifiP2pService,close,2,,left_only
WifiP2pService,getMessenger,2,,left_only
WifiP2pService,getP2pStateMachineMessenger,1,,left_only
WifiP2pService,setMiracastMode,2,,left_only
ContextHubSystemService,createClient,3,3,both
ContextHubSystemService,disableNanoApp,4,4,both
ContextHubSystemService,enableNanoApp,4,4,both
ContextHubSystemService,findNanoAppOnHub,3,3,both
ContextHubSystemService,getContextHubHandles,1,1,both
ContextHubSystemService,getContextHubInfo,2,2,both
ContextHubSystemService,getContextHubs,1,1,both
ContextHubSystemService,getNanoAppInstanceInfo,2,2,both
ContextHubSystemService,loadNanoApp,3,3,both
ContextHubSystemService,loadNanoAppOnHub,4,4,both
ContextHubSystemService,queryNanoApps,3,3,both
ContextHubSystemService,registerCallback,2,2,both
ContextHubSystemService,sendMessage,4,4,both
ContextHubSystemService,unloadNanoApp,2,2,both
ContextHubSystemService,unloadNanoAppFromHub,4,4,both
ContentService$Lifecycle,addPeriodicSync,5,5,both
ContentService$Lifecycle,addStatusChangeListener,3,3,both
ContentService$Lifecycle,cancelRequest,2,2,both
ContentService$Lifecycle,cancelSync,4,4,both
ContentService$Lifecycle,cancelSyncAsUser,5,5,both
ContentService$Lifecycle,getCache,4,4,both
ContentService$Lifecycle,getCurrentSyncs,1,1,both
ContentService$Lifecycle,getCurrentSyncsAsUser,2,2,both
ContentService$Lifecycle,getIsSyncable,3,3,both
ContentService$Lifecycle,getIsSyncableAsUser,4,4,both
ContentService$Lifecycle,getMasterSyncAutomatically,1,1,both
ContentService$Lifecycle,getMasterSyncAutomaticallyAsUser,2,2,both
ContentService$Lifecycle,getPeriodicSyncs,4,4,both
ContentService$Lifecycle,getSyncAdapterPackagesForAuthorityAsUser,3,3,both
ContentService$Lifecycle,getSyncAdapterTypes,1,1,both
ContentService$Lifecycle,getSyncAdapterTypesAsUser,2,2,both
ContentService$Lifecycle,getSyncAutomatically,3,3,both
ContentService$Lifecycle,getSyncAutomaticallyAsUser,4,4,both
ContentService$Lifecycle,getSyncStatus,4,4,both
ContentService$Lifecycle,getSyncStatusAsUser,5,5,both
ContentService$Lifecycle,isSyncActive,4,4,both
ContentService$Lifecycle,isSyncPending,4,4,both
ContentService$Lifecycle,isSyncPendingAsUser,5,5,both
ContentService$Lifecycle,notifyChange,7,7,both
ContentService$Lifecycle,notifyChange,7,5,both
ContentService$Lifecycle,notifyChange,5,7,both
ContentService$Lifecycle,notifyChange,5,5,both
ContentService$Lifecycle,putCache,5,5,both
ContentService$Lifecycle,registerContentObserver,4,4,both
ContentService$Lifecycle,registerContentObserver,4,6,both
ContentService$Lifecycle,registerContentObserver,6,4,both
ContentService$Lifecycle,registerContentObserver,6,6,both
ContentService$Lifecycle,removePeriodicSync,4,4,both
ContentService$Lifecycle,removeStatusChangeListener,2,2,both
ContentService$Lifecycle,requestSync,4,4,both
ContentService$Lifecycle,resetTodayStats,1,1,both
ContentService$Lifecycle,setIsSyncable,4,4,both
ContentService$Lifecycle,setMasterSyncAutomatically,2,2,both
ContentService$Lifecycle,setMasterSyncAutomaticallyAsUser,3,3,both
ContentService$Lifecycle,setSyncAutomatically,4,4,both
ContentService$Lifecycle,setSyncAutomaticallyAsUser,5,5,both
ContentService$Lifecycle,sync,2,2,both
ContentService$Lifecycle,syncAsUser,3,3,both
ContentService$Lifecycle,unregisterContentObserver,2,2,both
IpConnectivityMetrics,addNetdEventCallback,3,3,both
IpConnectivityMetrics,logEvent,2,2,both
IpConnectivityMetrics,removeNetdEventCallback,2,2,both
TextServicesManagerService$Lifecycle,finishSpellCheckerService,2,2,both
TextServicesManagerService$Lifecycle,getCurrentSpellChecker,2,2,both
TextServicesManagerService$Lifecycle,getCurrentSpellCheckerSubtype,3,3,both
TextServicesManagerService$Lifecycle,getEnabledSpellCheckers,1,1,both
TextServicesManagerService$Lifecycle,getSpellCheckerService,6,6,both
TextServicesManagerService$Lifecycle,isSpellCheckerEnabled,1,1,both
AudioService$Lifecycle,adjustSuggestedStreamVolume,7,7,both
AudioService$Lifecycle,adjustSuggestedStreamVolume,7,6,both
AudioService$Lifecycle,adjustSuggestedStreamVolume,6,7,both
AudioService$Lifecycle,adjustSuggestedStreamVolume,6,6,both
AudioService$Lifecycle,setStreamVolume,7,7,both
AudioService$Lifecycle,setStreamVolume,7,5,both
AudioService$Lifecycle,setStreamVolume,5,7,both
AudioService$Lifecycle,setStreamVolume,5,5,both
AudioService$Lifecycle,abandonAudioFocus,5,5,both
AudioService$Lifecycle,addMixForPolicy,3,3,both
AudioService$Lifecycle,adjustStreamVolume,5,5,both
AudioService$Lifecycle,adjustStreamVolume,5,7,both
AudioService$Lifecycle,adjustStreamVolume,7,5,both
AudioService$Lifecycle,adjustStreamVolume,7,7,both
AudioService$Lifecycle,avrcpSupportsAbsoluteVolume,3,3,both
AudioService$Lifecycle,disableRingtoneSync,2,2,both
AudioService$Lifecycle,disableSafeMediaVolume,2,2,both
AudioService$Lifecycle,dispatchFocusChange,4,4,both
AudioService$Lifecycle,forceRemoteSubmixFullVolume,3,3,both
AudioService$Lifecycle,forceVolumeControlStream,3,3,both
AudioService$Lifecycle,getActivePlaybackConfigurations,1,1,both
AudioService$Lifecycle,getActiveRecordingConfigurations,1,1,both
AudioService$Lifecycle,getCurrentAudioFocus,1,1,both
AudioService$Lifecycle,getFocusRampTimeMs,3,3,both
AudioService$Lifecycle,getLastAudibleStreamVolume,2,2,both
AudioService$Lifecycle,getMode,1,1,both
AudioService$Lifecycle,getRingerModeExternal,1,1,both
AudioService$Lifecycle,getRingerModeInternal,1,1,both
AudioService$Lifecycle,getRingtonePlayer,1,1,both
AudioService$Lifecycle,getStreamMaxVolume,2,2,both
AudioService$Lifecycle,getStreamMinVolume,2,2,both
AudioService$Lifecycle,getStreamVolume,2,2,both
AudioService$Lifecycle,getUiSoundsStreamType,1,1,both
AudioService$Lifecycle,getVibrateSetting,2,2,both
AudioService$Lifecycle,handleBluetoothA2dpDeviceConfigChange,2,2,both
AudioService$Lifecycle,isAudioServerRunning,1,1,both
AudioService$Lifecycle,isBluetoothA2dpOn,1,1,both
AudioService$Lifecycle,isBluetoothScoOn,1,1,both
AudioService$Lifecycle,isCameraSoundForced,1,1,both
AudioService$Lifecycle,isHdmiSystemAudioSupported,1,1,both
AudioService$Lifecycle,isMasterMute,1,1,both
AudioService$Lifecycle,isSpeakerphoneOn,1,1,both
AudioService$Lifecycle,isStreamAffectedByMute,2,2,both
AudioService$Lifecycle,isStreamAffectedByRingerMode,2,2,both
AudioService$Lifecycle,isStreamMute,2,2,both
AudioService$Lifecycle,isValidRingerMode,2,2,both
AudioService$Lifecycle,loadSoundEffects,1,1,both
AudioService$Lifecycle,notifyVolumeControllerVisible,3,3,both
AudioService$Lifecycle,playSoundEffect,2,2,both
AudioService$Lifecycle,playSoundEffectVolume,3,3,both
AudioService$Lifecycle,playerAttributes,3,3,both
AudioService$Lifecycle,playerEvent,3,3,both
AudioService$Lifecycle,playerHasOpPlayAudio,3,3,both
AudioService$Lifecycle,registerAudioPolicy,6,6,both
AudioService$Lifecycle,registerAudioServerStateDispatcher,2,2,both
AudioService$Lifecycle,registerPlaybackCallback,2,2,both
AudioService$Lifecycle,registerRecordingCallback,2,2,both
AudioService$Lifecycle,releasePlayer,2,2,both
AudioService$Lifecycle,reloadAudioSettings,1,1,both
AudioService$Lifecycle,removeMixForPolicy,3,3,both
AudioService$Lifecycle,requestAudioFocus,10,10,both
AudioService$Lifecycle,setBluetoothA2dpDeviceConnectionState,4,4,both
AudioService$Lifecycle,setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent,6,6,both
AudioService$Lifecycle,setBluetoothA2dpOn,2,2,both
AudioService$Lifecycle,setBluetoothHearingAidDeviceConnectionState,5,,left_only
AudioService$Lifecycle,setBluetoothScoOn,2,2,both
AudioService$Lifecycle,setFocusPropertiesForPolicy,3,3,both
AudioService$Lifecycle,setFocusRequestResultFromExtPolicy,4,4,both
AudioService$Lifecycle,setHdmiSystemAudioSupported,2,2,both
AudioService$Lifecycle,setMasterMute,5,5,both
AudioService$Lifecycle,setMicrophoneMute,4,4,both
AudioService$Lifecycle,setMode,4,4,both
AudioService$Lifecycle,setRingerModeExternal,3,3,both
AudioService$Lifecycle,setRingerModeInternal,3,3,both
AudioService$Lifecycle,setRingtonePlayer,2,2,both
AudioService$Lifecycle,setSpeakerphoneOn,2,2,both
AudioService$Lifecycle,setVibrateSetting,3,3,both
AudioService$Lifecycle,setVolumeController,2,2,both
AudioService$Lifecycle,setVolumePolicy,2,2,both
AudioService$Lifecycle,setWiredDeviceConnectionState,6,6,both
AudioService$Lifecycle,shouldVibrate,2,2,both
AudioService$Lifecycle,startBluetoothSco,3,3,both
AudioService$Lifecycle,startBluetoothScoVirtualCall,2,2,both
AudioService$Lifecycle,startWatchingRoutes,2,2,both
AudioService$Lifecycle,stopBluetoothSco,2,2,both
AudioService$Lifecycle,trackPlayer,2,2,both
AudioService$Lifecycle,unloadSoundEffects,1,1,both
AudioService$Lifecycle,unregisterAudioFocusClient,2,2,both
AudioService$Lifecycle,unregisterAudioPolicyAsync,2,2,both
AudioService$Lifecycle,unregisterAudioServerStateDispatcher,2,2,both
AudioService$Lifecycle,unregisterPlaybackCallback,2,2,both
AudioService$Lifecycle,unregisterRecordingCallback,2,2,both
UsageStatsService,getAppStandbyBucket,4,4,both
UsageStatsService,getAppStandbyBuckets,3,3,both
UsageStatsService,isAppInactive,3,3,both
UsageStatsService,onCarrierPrivilegedAppsChanged,1,1,both
UsageStatsService,queryConfigurationStats,5,5,both
UsageStatsService,queryEventStats,5,5,both
UsageStatsService,queryEvents,4,4,both
UsageStatsService,queryEventsForPackage,4,4,both
UsageStatsService,queryEventsForPackageForUser,6,6,both
UsageStatsService,queryEventsForUser,5,5,both
UsageStatsService,queryUsageStats,5,5,both
UsageStatsService,registerAppUsageObserver,6,6,both
UsageStatsService,reportChooserSelection,6,6,both
UsageStatsService,setAppInactive,4,4,both
UsageStatsService,setAppStandbyBucket,4,4,both
UsageStatsService,setAppStandbyBuckets,3,3,both
UsageStatsService,unregisterAppUsageObserver,3,3,both
UsageStatsService,whitelistAppTemporarily,4,4,both
EthernetService,addListener,2,2,both
EthernetService,getAvailableInterfaces,1,1,both
EthernetService,getConfiguration,2,2,both
EthernetService,isAvailable,2,2,both
EthernetService,removeListener,2,2,both
EthernetService,setConfiguration,3,3,both
NetworkScoreService$Lifecycle,clearScores,1,1,both
NetworkScoreService$Lifecycle,disableScoring,1,1,both
NetworkScoreService$Lifecycle,getActiveScorer,1,1,both
NetworkScoreService$Lifecycle,getActiveScorerPackage,1,1,both
NetworkScoreService$Lifecycle,getAllValidScorers,1,1,both
NetworkScoreService$Lifecycle,isCallerActiveScorer,2,2,both
NetworkScoreService$Lifecycle,registerNetworkScoreCache,4,4,both
NetworkScoreService$Lifecycle,requestScores,2,2,both
NetworkScoreService$Lifecycle,setActiveScorer,2,2,both
NetworkScoreService$Lifecycle,unregisterNetworkScoreCache,3,3,both
NetworkScoreService$Lifecycle,updateScores,2,2,both
MediaSessionService,addSessionTokensListener,4,4,both
MediaSessionService,addSessionsListener,4,4,both
MediaSessionService,createSession,5,5,both
MediaSessionService,createSession2,2,2,both
MediaSessionService,destroySession2,2,2,both
MediaSessionService,dispatchAdjustVolume,5,5,both
MediaSessionService,dispatchMediaKeyEvent,5,5,both
MediaSessionService,dispatchVolumeKeyEvent,6,6,both
MediaSessionService,getSessionTokens,4,4,both
MediaSessionService,getSessions,3,3,both
MediaSessionService,isGlobalPriorityActive,1,1,both
MediaSessionService,isTrusted,4,4,both
MediaSessionService,removeSessionTokensListener,3,3,both
MediaSessionService,removeSessionsListener,2,2,both
MediaSessionService,setCallback,2,2,both
MediaSessionService,setOnMediaKeyListener,2,2,both
MediaSessionService,setOnVolumeKeyLongPressListener,2,2,both
MediaSessionService,setRemoteVolumeController,2,2,both
MmsServiceBroker,addMultimediaMessageDraft,3,3,both
MmsServiceBroker,addTextMessageDraft,4,4,both
MmsServiceBroker,archiveStoredConversation,4,4,both
MmsServiceBroker,deleteStoredConversation,3,3,both
MmsServiceBroker,deleteStoredMessage,3,3,both
MmsServiceBroker,downloadMessage,7,7,both
MmsServiceBroker,getAutoPersisting,1,1,both
MmsServiceBroker,getCarrierConfigValues,2,2,both
MmsServiceBroker,importMultimediaMessage,7,7,both
MmsServiceBroker,importTextMessage,8,8,both
MmsServiceBroker,sendMessage,7,7,both
MmsServiceBroker,sendStoredMessage,6,6,both
MmsServiceBroker,setAutoPersisting,3,3,both
MmsServiceBroker,updateStoredMessageStatus,4,4,both
BackupManagerService$Lifecycle,acknowledgeFullBackupOrRestore,6,6,both
BackupManagerService$Lifecycle,adbBackup,11,11,both
BackupManagerService$Lifecycle,adbRestore,2,2,both
BackupManagerService$Lifecycle,agentConnected,3,3,both
BackupManagerService$Lifecycle,agentDisconnected,2,2,both
BackupManagerService$Lifecycle,backupNow,1,1,both
BackupManagerService$Lifecycle,beginRestoreSession,3,3,both
BackupManagerService$Lifecycle,cancelBackups,1,1,both
BackupManagerService$Lifecycle,clearBackupData,3,3,both
BackupManagerService$Lifecycle,dataChanged,2,2,both
BackupManagerService$Lifecycle,filterAppsEligibleForBackup,2,2,both
BackupManagerService$Lifecycle,fullTransportBackup,2,2,both
BackupManagerService$Lifecycle,getAvailableRestoreToken,2,2,both
BackupManagerService$Lifecycle,getConfigurationIntent,2,2,both
BackupManagerService$Lifecycle,getCurrentTransport,1,1,both
BackupManagerService$Lifecycle,getDataManagementIntent,2,2,both
BackupManagerService$Lifecycle,getDataManagementLabel,2,2,both
BackupManagerService$Lifecycle,getDestinationString,2,2,both
BackupManagerService$Lifecycle,getTransportWhitelist,1,1,both
BackupManagerService$Lifecycle,hasBackupPassword,1,1,both
BackupManagerService$Lifecycle,isAppEligibleForBackup,2,2,both
BackupManagerService$Lifecycle,isBackupEnabled,1,1,both
BackupManagerService$Lifecycle,isBackupServiceActive,2,2,both
BackupManagerService$Lifecycle,listAllTransportComponents,1,1,both
BackupManagerService$Lifecycle,listAllTransports,1,1,both
BackupManagerService$Lifecycle,opComplete,3,3,both
BackupManagerService$Lifecycle,requestBackup,5,5,both
BackupManagerService$Lifecycle,restoreAtInstall,3,3,both
BackupManagerService$Lifecycle,selectBackupTransport,2,2,both
BackupManagerService$Lifecycle,selectBackupTransportAsync,3,3,both
BackupManagerService$Lifecycle,setAutoRestore,2,2,both
BackupManagerService$Lifecycle,setBackupEnabled,2,2,both
BackupManagerService$Lifecycle,setBackupPassword,3,3,both
BackupManagerService$Lifecycle,setBackupProvisioned,2,2,both
BackupManagerService$Lifecycle,setBackupServiceActive,3,3,both
BackupManagerService$Lifecycle,updateTransportAttributes,7,7,both
MidiService$Lifecycle,closeDevice,3,3,both
MidiService$Lifecycle,getDeviceStatus,2,2,both
MidiService$Lifecycle,getDevices,1,1,both
MidiService$Lifecycle,getServiceDeviceInfo,3,3,both
MidiService$Lifecycle,openBluetoothDevice,4,4,both
MidiService$Lifecycle,openDevice,4,4,both
MidiService$Lifecycle,registerDeviceServer,8,8,both
MidiService$Lifecycle,registerListener,3,3,both
MidiService$Lifecycle,setDeviceStatus,3,3,both
MidiService$Lifecycle,unregisterDeviceServer,2,2,both
MidiService$Lifecycle,unregisterListener,3,3,both
NotificationManagerService,buzzBeepBlinkForNotification,,2,right_only
LockSettingsService$Lifecycle,checkPrivacyPasswordPattern,,4,right_only
LockSettingsService$Lifecycle,getPassword,,1,right_only
LockSettingsService$Lifecycle,sanitizePassword,,1,right_only
LockSettingsService$Lifecycle,savePrivacyPasswordPattern,,4,right_only
LockSettingsService$Lifecycle,setRawLockPassword,,3,right_only
SystemServerInjector,activityResume,,2,right_only
SystemServerInjector,addAccessControlPass,,2,right_only
SystemServerInjector,addAccessControlPassForUser,,3,right_only
SystemServerInjector,addMiuiFirewallSharedUid,,2,right_only
SystemServerInjector,areNotificationsEnabledForPackage,,3,right_only
SystemServerInjector,checkAccessControlPass,,3,right_only
SystemServerInjector,checkAccessControlPassAsUser,,4,right_only
SystemServerInjector,checkAccessControlPassword,,4,right_only
SystemServerInjector,checkAllowStartActivity,,5,right_only
SystemServerInjector,checkGameBoosterAntimsgPassAsUser,,4,right_only
SystemServerInjector,checkSmsBlocked,,2,right_only
SystemServerInjector,finishAccessControl,,3,right_only
SystemServerInjector,getAccessControlPasswordType,,2,right_only
SystemServerInjector,getAllPrivacyApps,,2,right_only
SystemServerInjector,getAppPermissionControlOpen,,2,right_only
SystemServerInjector,getAppRunningControlIBinder,,1,right_only
SystemServerInjector,getApplicationAccessControlEnabled,,2,right_only
SystemServerInjector,getApplicationAccessControlEnabledAsUser,,3,right_only
SystemServerInjector,getApplicationChildrenControlEnabled,,2,right_only
SystemServerInjector,getApplicationMaskNotificationEnabledAsUser,,3,right_only
SystemServerInjector,getCurrentUserId,,1,right_only
SystemServerInjector,getGameMode,,2,right_only
SystemServerInjector,getIncompatibleAppList,,1,right_only
SystemServerInjector,getPackageNameByPid,,2,right_only
SystemServerInjector,getSecondSpaceId,,1,right_only
SystemServerInjector,getStickWindowName,,2,right_only
SystemServerInjector,getSysAppCracked,,1,right_only
SystemServerInjector,getTopActivity,,1,right_only
SystemServerInjector,getWakePathCallListLog,,1,right_only
SystemServerInjector,getWakePathComponents,,2,right_only
SystemServerInjector,getWakeUpTime,,2,right_only
SystemServerInjector,grantInstallPermission,,3,right_only
SystemServerInjector,grantRuntimePermission,,2,right_only
SystemServerInjector,haveAccessControlPassword,,2,right_only
SystemServerInjector,isAllowStartService,,3,right_only
SystemServerInjector,isAppHide,,1,right_only
SystemServerInjector,isAppPrivacyEnabled,,2,right_only
SystemServerInjector,isFunctionOpen,,1,right_only
SystemServerInjector,isPrivacyApp,,3,right_only
SystemServerInjector,isRestrictedAppNet,,2,right_only
SystemServerInjector,isValidDevice,,1,right_only
SystemServerInjector,killNativePackageProcesses,,3,right_only
SystemServerInjector,moveTaskToStack,,4,right_only
SystemServerInjector,needFinishAccessControl,,2,right_only
SystemServerInjector,notifyAppsPreInstalled,,1,right_only
SystemServerInjector,offerGoogleBaseCallBack,,2,right_only
SystemServerInjector,pushUpdatePkgsData,,3,right_only
SystemServerInjector,pushWakePathConfirmDialogWhiteList,,3,right_only
SystemServerInjector,pushWakePathData,,4,right_only
SystemServerInjector,pushWakePathWhiteList,,3,right_only
SystemServerInjector,putSystemDataStringFile,,3,right_only
SystemServerInjector,readSystemDataStringFile,,2,right_only
SystemServerInjector,removeAccessControlPass,,2,right_only
SystemServerInjector,removeAccessControlPassAsUser,,3,right_only
SystemServerInjector,removeWakePathData,,2,right_only
SystemServerInjector,resizeTask,,4,right_only
SystemServerInjector,saveIcon,,3,right_only
SystemServerInjector,setAccessControlPassword,,4,right_only
SystemServerInjector,setAppHide,,2,right_only
SystemServerInjector,setAppPermissionControlOpen,,2,right_only
SystemServerInjector,setAppPrivacyStatus,,3,right_only
SystemServerInjector,setApplicationAccessControlEnabled,,3,right_only
SystemServerInjector,setApplicationAccessControlEnabledForUser,,4,right_only
SystemServerInjector,setApplicationChildrenControlEnabled,,3,right_only
SystemServerInjector,setApplicationMaskNotificationEnabledForUser,,4,right_only
SystemServerInjector,setCoreRuntimePermissionEnabled,,3,right_only
SystemServerInjector,setCurrentNetworkState,,2,right_only
SystemServerInjector,setGameBoosterIBinder,,4,right_only
SystemServerInjector,setIncompatibleAppList,,2,right_only
SystemServerInjector,setMiuiFirewallRule,,5,right_only
SystemServerInjector,setNotificationsEnabledForPackage,,4,right_only
SystemServerInjector,setPrivacyApp,,4,right_only
SystemServerInjector,setStickWindowName,,2,right_only
SystemServerInjector,setTrackWakePathCallListLogEnabled,,2,right_only
SystemServerInjector,setWakeUpTime,,3,right_only
SystemServerInjector,startInterceptSmsBySender,,4,right_only
SystemServerInjector,stopInterceptSmsBySender,,1,right_only
SystemServerInjector,watchGreenGuardProcess,,1,right_only
SystemServerInjector,writeAppHideConfig,,2,right_only
EnterpriseManagerService,getService,,2,right_only
NetworkWatchlistService$Lifecycle,getWatchlistConfigHash,,1,right_only
NetworkWatchlistService$Lifecycle,reloadWatchlist,,1,right_only
NetworkWatchlistService$Lifecycle,reportWatchlistIfNecessary,,1,right_only
NetworkWatchlistService$Lifecycle,startWatchlistLogging,,1,right_only
NetworkWatchlistService$Lifecycle,stopWatchlistLogging,,1,right_only
WifiService,dppAddBootstrapQrCode,,2,right_only
WifiService,dppBootstrapGenerate,,2,right_only
WifiService,dppBootstrapRemove,,2,right_only
WifiService,dppConfiguratorAdd,,4,right_only
WifiService,dppConfiguratorGetKey,,2,right_only
WifiService,dppConfiguratorRemove,,2,right_only
WifiService,dppGetUri,,2,right_only
WifiService,dppListen,,5,right_only
WifiService,dppStartAuth,,2,right_only
WifiService,dppStopListen,,1,right_only
WifiService,enableWifiCoverageExtendFeature,,2,right_only
WifiService,getCapabilities,,2,right_only
WifiService,isExtendingWifi,,1,right_only
WifiService,isWifiCoverageExtendFeatureEnabled,,1,right_only
CameraManager,calibrationMotor,,1,right_only
CameraManager,getMotorStatus,,1,right_only
CameraManager,getPopupCameraState,,1,right_only
CameraManager,notifyCameraStatus,,4,right_only
CameraManager,popupMotor,,1,right_only
CameraManager,takebackMotor,,1,right_only
BluetoothService,factoryReset,,1,right_only
FingerprintService,extCmd,,6,right_only
ContentService$Lifecycle,getMiSyncPauseToTime,,3,right_only
ContentService$Lifecycle,getMiSyncStrategy,,3,right_only
ContentService$Lifecycle,setMiSyncPauseToTime,,4,right_only
ContentService$Lifecycle,setMiSyncStrategy,,4,right_only
AudioService$Lifecycle,createAudioRecordForLoopback,,3,right_only
AudioService$Lifecycle,getNotificationUri,,2,right_only
AudioService$Lifecycle,setHearingAidDeviceConnectionState,,3,right_only
UsageStatsService,queryUsageStatsAsUser,,6,right_only
