Class Name,API Name,Number of Input Parameters,Input Parameter Types,_merge
NotificationManagerService,addAutomaticZenRule,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/app/AutomaticZenRule>]",both
NotificationManagerService,applyRestore,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Primordial,[B>, <Primordial,I>]",both
NotificationManagerService,areChannelsBypassingDnd,1,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>]",both
NotificationManagerService,areNotificationsEnabled,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,areNotificationsEnabledForPackage,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,canShowBadge,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,cancelAllNotifications,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,cancelNotificationWithTag,5,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>]",both
NotificationManagerService,cancelToast,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/app/ITransientNotification>]",both
NotificationManagerService,clearData,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,createNotificationChannelGroups,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ParceledListSlice>]",both
NotificationManagerService,createNotificationChannels,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ParceledListSlice>]",both
NotificationManagerService,createNotificationChannelsForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/content/pm/ParceledListSlice>]",both
NotificationManagerService,deleteNotificationChannel,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
NotificationManagerService,deleteNotificationChannelGroup,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
NotificationManagerService,enqueueNotificationWithTag,7,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/app/Notification>, <Primordial,I>]",both
NotificationManagerService,enqueueToast,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/app/ITransientNotification>, <Primordial,I>]",both
NotificationManagerService,finishToken,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/app/ITransientNotification>]",both
NotificationManagerService,getActiveNotifications,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getAppActiveNotifications,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,getAutomaticZenRule,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getBackupPayload,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Primordial,I>]",both
NotificationManagerService,getBlockedAppCount,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Primordial,I>]",both
NotificationManagerService,getBlockedChannelCount,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,getDeletedChannelCount,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,getEffectsSuppressor,1,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>]",both
NotificationManagerService,getEnabledNotificationListenerPackages,1,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>]",both
NotificationManagerService,getEnabledNotificationListeners,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Primordial,I>]",both
NotificationManagerService,getHistoricalNotifications,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,getNotificationChannel,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getNotificationChannelForPackage,5,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
NotificationManagerService,getNotificationChannelGroup,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getNotificationChannelGroupForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,getNotificationChannelGroups,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getNotificationChannelGroupsForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,getNotificationChannels,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getNotificationChannelsForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,getNotificationPolicy,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getNumNotificationChannelsForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,getPackageImportance,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,getPopulatedNotificationChannelGroupForPackage,5,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
NotificationManagerService,getRecentNotifyingAppsForUser,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Primordial,I>]",both
NotificationManagerService,getRuleInstanceCount,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>]",both
NotificationManagerService,getZenMode,1,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>]",both
NotificationManagerService,getZenModeConfig,1,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>]",both
NotificationManagerService,getZenRules,1,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>]",both
NotificationManagerService,isNotificationAssistantAccessGranted,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>]",both
NotificationManagerService,isNotificationListenerAccessGranted,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>]",both
NotificationManagerService,isNotificationListenerAccessGrantedForUser,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>, <Primordial,I>]",both
NotificationManagerService,isNotificationPolicyAccessGranted,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,isNotificationPolicyAccessGrantedForPackage,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,isSystemConditionProviderEnabled,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,matchesCallFilter,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/os/Bundle>]",both
NotificationManagerService,onlyHasDefaultChannel,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,removeAutomaticZenRule,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,removeAutomaticZenRules,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",both
NotificationManagerService,requestBindListener,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>]",both
NotificationManagerService,requestBindProvider,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>]",both
NotificationManagerService,setInterruptionFilter,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>]",both
NotificationManagerService,setNotificationAssistantAccessGranted,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>, <Primordial,Z>]",both
NotificationManagerService,setNotificationAssistantAccessGrantedForUser,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,setNotificationListenerAccessGranted,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>, <Primordial,Z>]",both
NotificationManagerService,setNotificationListenerAccessGrantedForUser,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Landroid/content/ComponentName>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,setNotificationPolicy,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/app/NotificationManager$Policy>]",both
NotificationManagerService,setNotificationPolicyAccessGranted,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
NotificationManagerService,setNotificationPolicyAccessGrantedForUser,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,setNotificationsEnabledForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,setNotificationsEnabledWithImportanceLockForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,setShowBadge,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
NotificationManagerService,setZenMode,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Primordial,I>, <Application,Landroid/net/Uri>, <Application,Ljava/lang/String>]",both
NotificationManagerService,updateAutomaticZenRule,3,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Application,Landroid/app/AutomaticZenRule>]",both
NotificationManagerService,updateNotificationChannelForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/app/NotificationChannel>]",both
NotificationManagerService,updateNotificationChannelGroupForPackage,4,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/app/NotificationChannelGroup>]",both
RttService,cancelRanging,2,"[<Application,Lcom/android/server/wifi/rtt/RttServiceImpl>, <Application,Landroid/os/WorkSource>]",left_only
RttService,isAvailable,1,"[<Application,Lcom/android/server/wifi/rtt/RttServiceImpl>]",left_only
RttService,startRanging,6,"[<Application,Lcom/android/server/wifi/rtt/RttServiceImpl>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>, <Application,Landroid/os/WorkSource>, <Application,Landroid/net/wifi/rtt/RangingRequest>, <Application,Landroid/net/wifi/rtt/IRttCallback>]",left_only
CompanionDeviceManagerService,associate,4,"[<Application,Lcom/android/server/companion/CompanionDeviceManagerService$CompanionDeviceManagerImpl>, <Application,Landroid/companion/AssociationRequest>, <Application,Landroid/companion/IFindDeviceCallback>, <Application,Ljava/lang/String>]",both
CompanionDeviceManagerService,disassociate,3,"[<Application,Lcom/android/server/companion/CompanionDeviceManagerService$CompanionDeviceManagerImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
CompanionDeviceManagerService,getAssociations,3,"[<Application,Lcom/android/server/companion/CompanionDeviceManagerService$CompanionDeviceManagerImpl>, <Application,Ljava/lang/String>, <Primordial,I>]",both
CompanionDeviceManagerService,hasNotificationAccess,2,"[<Application,Lcom/android/server/companion/CompanionDeviceManagerService$CompanionDeviceManagerImpl>, <Application,Landroid/content/ComponentName>]",both
CompanionDeviceManagerService,requestNotificationAccess,2,"[<Application,Lcom/android/server/companion/CompanionDeviceManagerService$CompanionDeviceManagerImpl>, <Application,Landroid/content/ComponentName>]",both
CompanionDeviceManagerService,stopScan,4,"[<Application,Lcom/android/server/companion/CompanionDeviceManagerService$CompanionDeviceManagerImpl>, <Application,Landroid/companion/AssociationRequest>, <Application,Landroid/companion/IFindDeviceCallback>, <Application,Ljava/lang/String>]",both
UsbService$Lifecycle,allowUsbDebugging,3,"[<Application,Lcom/android/server/usb/UsbService>, <Primordial,Z>, <Application,Ljava/lang/String>]",both
UsbService$Lifecycle,clearDefaults,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsbService$Lifecycle,clearUsbDebuggingKeys,1,"[<Application,Lcom/android/server/usb/UsbService>]",both
UsbService$Lifecycle,denyUsbDebugging,1,"[<Application,Lcom/android/server/usb/UsbService>]",both
UsbService$Lifecycle,getControlFd,2,"[<Application,Lcom/android/server/usb/UsbService>, <Primordial,J>]",both
UsbService$Lifecycle,getCurrentAccessory,1,"[<Application,Lcom/android/server/usb/UsbService>]",both
UsbService$Lifecycle,getCurrentFunctions,1,"[<Application,Lcom/android/server/usb/UsbService>]",both
UsbService$Lifecycle,getDeviceList,2,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/os/Bundle>]",both
UsbService$Lifecycle,getPortStatus,2,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>]",both
UsbService$Lifecycle,getPorts,1,"[<Application,Lcom/android/server/usb/UsbService>]",both
UsbService$Lifecycle,getScreenUnlockedFunctions,1,"[<Application,Lcom/android/server/usb/UsbService>]",both
UsbService$Lifecycle,grantAccessoryPermission,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbAccessory>, <Primordial,I>]",both
UsbService$Lifecycle,grantDevicePermission,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbDevice>, <Primordial,I>]",both
UsbService$Lifecycle,hasAccessoryPermission,2,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbAccessory>]",both
UsbService$Lifecycle,hasDefaults,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsbService$Lifecycle,hasDevicePermission,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbDevice>, <Application,Ljava/lang/String>]",both
UsbService$Lifecycle,isFunctionEnabled,2,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>]",both
UsbService$Lifecycle,openAccessory,2,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbAccessory>]",both
UsbService$Lifecycle,openDevice,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
UsbService$Lifecycle,requestAccessoryPermission,4,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbAccessory>, <Application,Ljava/lang/String>, <Application,Landroid/app/PendingIntent>]",both
UsbService$Lifecycle,requestDevicePermission,4,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbDevice>, <Application,Ljava/lang/String>, <Application,Landroid/app/PendingIntent>]",both
UsbService$Lifecycle,setAccessoryPackage,4,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbAccessory>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsbService$Lifecycle,setCurrentFunction,3,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
UsbService$Lifecycle,setCurrentFunctions,2,"[<Application,Lcom/android/server/usb/UsbService>, <Primordial,J>]",both
UsbService$Lifecycle,setDevicePackage,4,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/hardware/usb/UsbDevice>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsbService$Lifecycle,setPortRoles,4,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>]",both
UsbService$Lifecycle,setScreenUnlockedFunctions,2,"[<Application,Lcom/android/server/usb/UsbService>, <Primordial,J>]",both
UsbService$Lifecycle,setUsbDeviceConnectionHandler,2,"[<Application,Lcom/android/server/usb/UsbService>, <Application,Landroid/content/ComponentName>]",both
WifiScanningService,getAvailableChannels,2,"[<Application,Lcom/android/server/wifi/scanner/WifiScanningServiceImpl>, <Primordial,I>]",both
WifiScanningService,getMessenger,1,"[<Application,Lcom/android/server/wifi/scanner/WifiScanningServiceImpl>]",both
LockSettingsService$Lifecycle,verifyCredential,7,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>, <Application,Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,J>, <Application,Lcom/android/internal/widget/ICheckCredentialProgressCallback>]",both
LockSettingsService$Lifecycle,checkCredential,5,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>, <Application,Lcom/android/internal/widget/ICheckCredentialProgressCallback>]",both
LockSettingsService$Lifecycle,checkVoldPassword,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,closeSession,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>]",both
LockSettingsService$Lifecycle,generateKey,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>]",both
LockSettingsService$Lifecycle,getBoolean,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",both
LockSettingsService$Lifecycle,getHashFactor,3,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
LockSettingsService$Lifecycle,getKey,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>]",both
LockSettingsService$Lifecycle,getKeyChainSnapshot,1,"[<Application,Lcom/android/server/locksettings/LockSettingsService>]",both
LockSettingsService$Lifecycle,getLong,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,J>, <Primordial,I>]",both
LockSettingsService$Lifecycle,getRecoverySecretTypes,1,"[<Application,Lcom/android/server/locksettings/LockSettingsService>]",both
LockSettingsService$Lifecycle,getRecoveryStatus,1,"[<Application,Lcom/android/server/locksettings/LockSettingsService>]",both
LockSettingsService$Lifecycle,getSeparateProfileChallengeEnabled,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,getString,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
LockSettingsService$Lifecycle,getStrongAuthForUser,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,havePassword,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,havePattern,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,importKey,3,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,[B>]",both
LockSettingsService$Lifecycle,recoverKeyChainSnapshot,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,[B>, <Application,Ljava/util/List>]",both
LockSettingsService$Lifecycle,registerStrongAuthTracker,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Landroid/app/trust/IStrongAuthTracker>]",both
LockSettingsService$Lifecycle,removeKey,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>]",both
LockSettingsService$Lifecycle,requireStrongAuth,3,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>, <Primordial,I>]",both
LockSettingsService$Lifecycle,resetKeyStore,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,setBoolean,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",both
LockSettingsService$Lifecycle,setLockCredential,6,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>]",both
LockSettingsService$Lifecycle,setLong,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,J>, <Primordial,I>]",both
LockSettingsService$Lifecycle,setRecoverySecretTypes,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,[I>]",both
LockSettingsService$Lifecycle,setRecoveryStatus,3,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
LockSettingsService$Lifecycle,setSeparateProfileChallengeEnabled,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>, <Primordial,Z>, <Application,Ljava/lang/String>]",both
LockSettingsService$Lifecycle,setServerParams,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,[B>]",both
LockSettingsService$Lifecycle,setSnapshotCreatedPendingIntent,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Landroid/app/PendingIntent>]",both
LockSettingsService$Lifecycle,setString,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
LockSettingsService$Lifecycle,systemReady,1,"[<Application,Lcom/android/server/locksettings/LockSettingsService>]",both
LockSettingsService$Lifecycle,unregisterStrongAuthTracker,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Landroid/app/trust/IStrongAuthTracker>]",both
LockSettingsService$Lifecycle,userPresent,2,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,I>]",both
LockSettingsService$Lifecycle,verifyCredential,5,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,J>, <Primordial,I>]",both
LockSettingsService$Lifecycle,verifyTiedProfileChallenge,5,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,J>, <Primordial,I>]",both
LauncherAppsService,addOnAppsChangedListener,3,"[<Application,Lcom/android/server/pm/LauncherAppsService$LauncherAppsImpl>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/IOnAppsChangedListener>]",both
LauncherAppsService,getShortcutIconFd,5,"[<Application,Lcom/android/server/pm/LauncherAppsService$LauncherAppsImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
LauncherAppsService,getShortcutIconResId,5,"[<Application,Lcom/android/server/pm/LauncherAppsService$LauncherAppsImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
LauncherAppsService,hasShortcutHostPermission,2,"[<Application,Lcom/android/server/pm/LauncherAppsService$LauncherAppsImpl>, <Application,Ljava/lang/String>]",both
LauncherAppsService,removeOnAppsChangedListener,2,"[<Application,Lcom/android/server/pm/LauncherAppsService$LauncherAppsImpl>, <Application,Landroid/content/pm/IOnAppsChangedListener>]",both
LauncherAppsService,startShortcut,7,"[<Application,Lcom/android/server/pm/LauncherAppsService$LauncherAppsImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Landroid/graphics/Rect>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
TrustManagerService,clearAllFingerprints,1,"[<Application,Lcom/android/server/trust/TrustManagerService$1>]",both
TrustManagerService,isDeviceLocked,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>]",both
TrustManagerService,isDeviceSecure,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>]",both
TrustManagerService,isTrustUsuallyManaged,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>]",both
TrustManagerService,registerTrustListener,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Application,Landroid/app/trust/ITrustListener>]",both
TrustManagerService,reportEnabledTrustAgentsChanged,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>]",both
TrustManagerService,reportKeyguardShowingChanged,1,"[<Application,Lcom/android/server/trust/TrustManagerService$1>]",both
TrustManagerService,reportUnlockAttempt,3,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,Z>, <Primordial,I>]",both
TrustManagerService,reportUnlockLockout,3,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>, <Primordial,I>]",both
TrustManagerService,setDeviceLockedForUser,3,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>, <Primordial,Z>]",both
TrustManagerService,unlockedByFingerprintForUser,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Primordial,I>]",both
TrustManagerService,unregisterTrustListener,2,"[<Application,Lcom/android/server/trust/TrustManagerService$1>, <Application,Landroid/app/trust/ITrustListener>]",both
DisplayManagerService,connectWifiDisplay,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Ljava/lang/String>]",both
DisplayManagerService,createVirtualDisplay,11,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Landroid/hardware/display/IVirtualDisplayCallback>, <Application,Landroid/media/projection/IMediaProjection>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Landroid/view/Surface>, <Primordial,I>, <Application,Ljava/lang/String>]",both
DisplayManagerService,disconnectWifiDisplay,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,forgetWifiDisplay,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Ljava/lang/String>]",both
DisplayManagerService,getAmbientBrightnessStats,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,getBrightnessConfigurationForUser,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Primordial,I>]",both
DisplayManagerService,getBrightnessEvents,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Ljava/lang/String>]",both
DisplayManagerService,getDefaultBrightnessConfiguration,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,getDisplayIds,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,getDisplayInfo,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Primordial,I>]",both
DisplayManagerService,getMinimumBrightnessCurve,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,getStableDisplaySize,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,getWifiDisplayStatus,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,pauseWifiDisplay,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,registerCallback,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Landroid/hardware/display/IDisplayManagerCallback>]",both
DisplayManagerService,releaseVirtualDisplay,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Landroid/hardware/display/IVirtualDisplayCallback>]",both
DisplayManagerService,renameWifiDisplay,3,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
DisplayManagerService,requestColorMode,3,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Primordial,I>, <Primordial,I>]",both
DisplayManagerService,resizeVirtualDisplay,5,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Landroid/hardware/display/IVirtualDisplayCallback>, <Primordial,I>, <Primordial,I>, <Primordial,I>]",both
DisplayManagerService,resumeWifiDisplay,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,setBrightnessConfigurationForUser,4,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Landroid/hardware/display/BrightnessConfiguration>, <Primordial,I>, <Application,Ljava/lang/String>]",both
DisplayManagerService,setSaturationLevel,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Primordial,F>]",both
DisplayManagerService,setTemporaryAutoBrightnessAdjustment,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Primordial,F>]",both
DisplayManagerService,setTemporaryBrightness,2,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Primordial,I>]",both
DisplayManagerService,setVirtualDisplaySurface,3,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>, <Application,Landroid/hardware/display/IVirtualDisplayCallback>, <Application,Landroid/view/Surface>]",both
DisplayManagerService,startWifiDisplayScan,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
DisplayManagerService,stopWifiDisplayScan,1,"[<Application,Lcom/android/server/display/DisplayManagerService$BinderService>]",both
CrossProfileAppsService,getTargetUserProfiles,2,"[<Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl>, <Application,Ljava/lang/String>]",both
BroadcastRadioService,addAnnouncementListener,3,"[<Application,Lcom/android/server/broadcastradio/BroadcastRadioService$ServiceImpl>, <Primordial,[I>, <Application,Landroid/hardware/radio/IAnnouncementListener>]",both
BroadcastRadioService,listModules,1,"[<Application,Lcom/android/server/broadcastradio/BroadcastRadioService$ServiceImpl>]",both
BroadcastRadioService,openTuner,5,"[<Application,Lcom/android/server/broadcastradio/BroadcastRadioService$ServiceImpl>, <Primordial,I>, <Application,Landroid/hardware/radio/RadioManager$BandConfig>, <Primordial,Z>, <Application,Landroid/hardware/radio/ITunerCallback>]",both
MediaProjectionManagerService,addCallback,2,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>, <Application,Landroid/media/projection/IMediaProjectionWatcherCallback>]",both
MediaProjectionManagerService,createProjection,5,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
MediaProjectionManagerService,getActiveProjectionInfo,1,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>]",both
MediaProjectionManagerService,hasProjectionPermission,3,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>, <Primordial,I>, <Application,Ljava/lang/String>]",both
MediaProjectionManagerService,isValidMediaProjection,2,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>, <Application,Landroid/media/projection/IMediaProjection>]",both
MediaProjectionManagerService,removeCallback,2,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>, <Application,Landroid/media/projection/IMediaProjectionWatcherCallback>]",both
MediaProjectionManagerService,stopActiveProjection,1,"[<Application,Lcom/android/server/media/projection/MediaProjectionManagerService$BinderService>]",both
JobSchedulerService,cancel,2,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>, <Primordial,I>]",both
JobSchedulerService,cancelAll,1,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>]",both
JobSchedulerService,enqueue,3,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>, <Application,Landroid/app/job/JobInfo>, <Application,Landroid/app/job/JobWorkItem>]",both
JobSchedulerService,getAllPendingJobs,1,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>]",both
JobSchedulerService,getPendingJob,2,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>, <Primordial,I>]",both
JobSchedulerService,schedule,2,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>, <Application,Landroid/app/job/JobInfo>]",both
JobSchedulerService,scheduleAsPackage,5,"[<Application,Lcom/android/server/job/JobSchedulerService$JobSchedulerStub>, <Application,Landroid/app/job/JobInfo>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
MediaResourceMonitorService,notifyResourceGranted,3,"[<Application,Lcom/android/server/media/MediaResourceMonitorService$MediaResourceMonitorImpl>, <Primordial,I>, <Primordial,I>]",both
ClipboardService,addPrimaryClipChangedListener,3,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Landroid/content/IOnPrimaryClipChangedListener>, <Application,Ljava/lang/String>]",both
ClipboardService,clearPrimaryClip,2,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Ljava/lang/String>]",both
ClipboardService,getPrimaryClip,2,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Ljava/lang/String>]",both
ClipboardService,getPrimaryClipDescription,2,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Ljava/lang/String>]",both
ClipboardService,hasClipboardText,2,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Ljava/lang/String>]",both
ClipboardService,hasPrimaryClip,2,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Ljava/lang/String>]",both
ClipboardService,removePrimaryClipChangedListener,2,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Landroid/content/IOnPrimaryClipChangedListener>]",both
ClipboardService,setPrimaryClip,3,"[<Application,Lcom/android/server/clipboard/ClipboardService$ClipboardImpl>, <Application,Landroid/content/ClipData>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccounts,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Primordial,[I>]",both
AccountManagerService$Lifecycle,getAccountsAndVisibilityForPackage,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/util/List>, <Application,Ljava/lang/Integer>, <Application,Lcom/android/server/accounts/AccountManagerService$UserAccounts>]",both
AccountManagerService$Lifecycle,hasAccountAccess,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AccountManagerService$Lifecycle,registerAccountListener,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Lcom/android/server/accounts/AccountManagerService$UserAccounts>]",both
AccountManagerService$Lifecycle,removeSharedAccountAsUser,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Primordial,I>, <Primordial,I>]",both
AccountManagerService$Lifecycle,setAccountVisibility,6,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>, <Application,Lcom/android/server/accounts/AccountManagerService$UserAccounts>]",both
AccountManagerService$Lifecycle,unregisterAccountListener,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Lcom/android/server/accounts/AccountManagerService$UserAccounts>]",both
AccountManagerService$Lifecycle,accountAuthenticated,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,addAccount,7,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,[Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/os/Bundle>]",both
AccountManagerService$Lifecycle,addAccountAsUser,8,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,[Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
AccountManagerService$Lifecycle,addAccountExplicitly,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>]",both
AccountManagerService$Lifecycle,addAccountExplicitlyWithVisibility,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>, <Application,Ljava/util/Map>]",both
AccountManagerService$Lifecycle,addSharedAccountsFromParentUser,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,clearPassword,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,confirmCredentialsAsUser,6,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,Landroid/os/Bundle>, <Primordial,Z>, <Primordial,I>]",both
AccountManagerService$Lifecycle,copyAccountToUser,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Primordial,I>, <Primordial,I>]",both
AccountManagerService$Lifecycle,editProperties,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
AccountManagerService$Lifecycle,finishSessionAsUser,6,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/os/Bundle>, <Primordial,Z>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
AccountManagerService$Lifecycle,getAccountByTypeAndFeatures,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccountVisibility,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccounts,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccounts,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccountsAndVisibilityForPackage,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccountsAsUser,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccountsByFeatures,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccountsByTypeForPackage,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAccountsForPackage,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAuthToken,7,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,Z>, <Application,Landroid/os/Bundle>]",both
AccountManagerService$Lifecycle,getAuthTokenLabel,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,getAuthenticatorTypes,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Primordial,I>]",both
AccountManagerService$Lifecycle,getPackagesAndVisibilityForAccount,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,getPassword,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,getPreviousName,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,getSharedAccountsAsUser,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Primordial,I>]",both
AccountManagerService$Lifecycle,getUserData,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,hasFeatures,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,invalidateAuthToken,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,isCredentialsUpdateSuggested,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,onAccountAccessed,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,peekAuthToken,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,registerAccountListener,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,removeAccount,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Primordial,Z>]",both
AccountManagerService$Lifecycle,removeAccountAsUser,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Primordial,Z>, <Primordial,I>]",both
AccountManagerService$Lifecycle,removeAccountExplicitly,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,removeSharedAccountAsUser,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Primordial,I>]",both
AccountManagerService$Lifecycle,renameAccount,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,renameSharedAccountAsUser,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AccountManagerService$Lifecycle,setAccountVisibility,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AccountManagerService$Lifecycle,setAuthToken,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,setPassword,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,setUserData,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,someUserHasAccount,2,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>]",both
AccountManagerService$Lifecycle,startAddAccountSession,7,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,[Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/os/Bundle>]",both
AccountManagerService$Lifecycle,startUpdateCredentialsSession,6,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/os/Bundle>]",both
AccountManagerService$Lifecycle,unregisterAccountListener,3,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AccountManagerService$Lifecycle,updateAppPermission,5,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",both
AccountManagerService$Lifecycle,updateCredentials,6,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/IAccountManagerResponse>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/os/Bundle>]",both
AccountManagerService$Lifecycle,hasAccountAccess,4,"[<Application,Lcom/android/server/accounts/AccountManagerService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/os/UserHandle>]",both
HdmiControlService,addDeviceEventListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiDeviceEventListener>]",both
HdmiControlService,addHdmiMhlVendorCommandListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiMhlVendorCommandListener>]",both
HdmiControlService,addHotplugEventListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiHotplugEventListener>]",both
HdmiControlService,addSystemAudioModeChangeListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener>]",both
HdmiControlService,addVendorCommandListener,3,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiVendorCommandListener>, <Primordial,I>]",both
HdmiControlService,canChangeSystemAudioMode,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,clearTimerRecording,4,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>, <Primordial,[B>]",both
HdmiControlService,deviceSelect,3,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Application,Landroid/hardware/hdmi/IHdmiControlCallback>]",both
HdmiControlService,getActiveSource,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,getDeviceList,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,getInputDevices,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,getPortInfo,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,getSupportedTypes,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,getSystemAudioMode,1,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>]",both
HdmiControlService,oneTouchPlay,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiControlCallback>]",both
HdmiControlService,portSelect,3,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Application,Landroid/hardware/hdmi/IHdmiControlCallback>]",both
HdmiControlService,queryDisplayStatus,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiControlCallback>]",both
HdmiControlService,removeHotplugEventListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiHotplugEventListener>]",both
HdmiControlService,removeSystemAudioModeChangeListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiSystemAudioModeChangeListener>]",both
HdmiControlService,sendKeyEvent,4,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>, <Primordial,Z>]",both
HdmiControlService,sendMhlVendorCommand,5,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Primordial,[B>]",both
HdmiControlService,sendStandby,3,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>]",both
HdmiControlService,sendVendorCommand,5,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>, <Primordial,[B>, <Primordial,Z>]",both
HdmiControlService,setArcMode,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,Z>]",both
HdmiControlService,setHdmiRecordListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiRecordListener>]",both
HdmiControlService,setInputChangeListener,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Application,Landroid/hardware/hdmi/IHdmiInputChangeListener>]",both
HdmiControlService,setProhibitMode,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,Z>]",both
HdmiControlService,setStandbyMode,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,Z>]",both
HdmiControlService,setSystemAudioMode,3,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,Z>, <Application,Landroid/hardware/hdmi/IHdmiControlCallback>]",both
HdmiControlService,setSystemAudioMute,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,Z>]",both
HdmiControlService,setSystemAudioVolume,4,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>, <Primordial,I>]",both
HdmiControlService,startOneTouchRecord,3,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,[B>]",both
HdmiControlService,startTimerRecording,4,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>, <Primordial,I>, <Primordial,[B>]",both
HdmiControlService,stopOneTouchRecord,2,"[<Application,Lcom/android/server/hdmi/HdmiControlService$BinderService>, <Primordial,I>]",both
StorageStatsService$Lifecycle,getCacheBytes,3,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,getCacheQuotaBytes,4,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,getFreeBytes,3,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,getTotalBytes,3,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,isQuotaSupported,3,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,isReservedSupported,3,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,queryExternalStatsForUser,4,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,queryStatsForPackage,5,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,queryStatsForUid,4,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
StorageStatsService$Lifecycle,queryStatsForUser,4,"[<Application,Lcom/android/server/usage/StorageStatsService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>]",both
RulesManagerService$Lifecycle,getRulesState,1,"[<Application,Lcom/android/server/timezone/RulesManagerService>]",both
RulesManagerService$Lifecycle,requestInstall,4,"[<Application,Lcom/android/server/timezone/RulesManagerService>, <Application,Landroid/os/ParcelFileDescriptor>, <Primordial,[B>, <Application,Landroid/app/timezone/ICallback>]",both
RulesManagerService$Lifecycle,requestNothing,3,"[<Application,Lcom/android/server/timezone/RulesManagerService>, <Primordial,[B>, <Primordial,Z>]",both
RulesManagerService$Lifecycle,requestUninstall,3,"[<Application,Lcom/android/server/timezone/RulesManagerService>, <Primordial,[B>, <Application,Landroid/app/timezone/ICallback>]",both
WifiAwareService,connect,6,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>, <Application,Landroid/net/wifi/aware/IWifiAwareEventCallback>, <Application,Landroid/net/wifi/aware/ConfigRequest>, <Primordial,Z>]",both
WifiAwareService,disconnect,3,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Primordial,I>, <Application,Landroid/os/IBinder>]",both
WifiAwareService,getCharacteristics,1,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>]",both
WifiAwareService,isUsageEnabled,1,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>]",both
WifiAwareService,publish,5,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/net/wifi/aware/PublishConfig>, <Application,Landroid/net/wifi/aware/IWifiAwareDiscoverySessionCallback>]",both
WifiAwareService,requestMacAddresses,4,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Primordial,I>, <Application,Ljava/util/List>, <Application,Landroid/net/wifi/aware/IWifiAwareMacAddressProvider>]",both
WifiAwareService,sendMessage,7,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Primordial,[B>, <Primordial,I>, <Primordial,I>]",both
WifiAwareService,subscribe,5,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/net/wifi/aware/SubscribeConfig>, <Application,Landroid/net/wifi/aware/IWifiAwareDiscoverySessionCallback>]",both
WifiAwareService,terminateSession,3,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Primordial,I>, <Primordial,I>]",both
WifiAwareService,updatePublish,4,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Primordial,I>, <Primordial,I>, <Application,Landroid/net/wifi/aware/PublishConfig>]",both
WifiAwareService,updateSubscribe,4,"[<Application,Lcom/android/server/wifi/aware/WifiAwareServiceImpl>, <Primordial,I>, <Primordial,I>, <Application,Landroid/net/wifi/aware/SubscribeConfig>]",both
OtaDexoptService,cleanup,1,"[<Application,Lcom/android/server/pm/OtaDexoptService>]",both
OtaDexoptService,dexoptNextPackage,1,"[<Application,Lcom/android/server/pm/OtaDexoptService>]",both
OtaDexoptService,getProgress,1,"[<Application,Lcom/android/server/pm/OtaDexoptService>]",both
OtaDexoptService,isDone,1,"[<Application,Lcom/android/server/pm/OtaDexoptService>]",both
OtaDexoptService,nextDexoptCommand,1,"[<Application,Lcom/android/server/pm/OtaDexoptService>]",both
OtaDexoptService,prepare,1,"[<Application,Lcom/android/server/pm/OtaDexoptService>]",both
SliceManagerService$Lifecycle,applyRestore,3,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Primordial,[B>, <Primordial,I>]",both
SliceManagerService$Lifecycle,checkSlicePermission,6,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Landroid/net/Uri>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>, <Application,[Ljava/lang/String>]",both
SliceManagerService$Lifecycle,getBackupPayload,2,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Primordial,I>]",both
SliceManagerService$Lifecycle,getPinnedSlices,2,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Ljava/lang/String>]",both
SliceManagerService$Lifecycle,getPinnedSpecs,3,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Landroid/net/Uri>, <Application,Ljava/lang/String>]",both
SliceManagerService$Lifecycle,grantPermissionFromUser,5,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Landroid/net/Uri>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
SliceManagerService$Lifecycle,grantSlicePermission,4,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>]",both
SliceManagerService$Lifecycle,hasSliceAccess,2,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Ljava/lang/String>]",both
SliceManagerService$Lifecycle,pinSlice,5,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,[Landroid/app/slice/SliceSpec>, <Application,Landroid/os/IBinder>]",both
SliceManagerService$Lifecycle,revokeSlicePermission,4,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>]",both
SliceManagerService$Lifecycle,unpinSlice,4,"[<Application,Lcom/android/server/slice/SliceManagerService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Landroid/os/IBinder>]",both
RestrictionsManagerService,createLocalApprovalIntent,1,"[<Application,Lcom/android/server/restrictions/RestrictionsManagerService$RestrictionsManagerImpl>]",both
RestrictionsManagerService,getApplicationRestrictions,2,"[<Application,Lcom/android/server/restrictions/RestrictionsManagerService$RestrictionsManagerImpl>, <Application,Ljava/lang/String>]",both
RestrictionsManagerService,hasRestrictionsProvider,1,"[<Application,Lcom/android/server/restrictions/RestrictionsManagerService$RestrictionsManagerImpl>]",both
WifiService,acquireMulticastLock,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>]",both
WifiService,acquireWifiLock,5,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Landroid/os/WorkSource>]",both
WifiService,addOrUpdateNetwork,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/WifiConfiguration>, <Application,Ljava/lang/String>]",both
WifiService,addOrUpdatePasspointConfiguration,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/hotspot2/PasspointConfiguration>, <Application,Ljava/lang/String>]",both
WifiService,deauthenticateNetwork,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,J>, <Primordial,Z>]",both
WifiService,disableEphemeralNetwork,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
WifiService,disableNetwork,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>, <Application,Ljava/lang/String>]",both
WifiService,disconnect,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,enableNetwork,4,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>, <Primordial,Z>, <Application,Ljava/lang/String>]",both
WifiService,enableTdls,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
WifiService,enableTdlsWithMacAddress,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
WifiService,enableVerboseLogging,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>]",both
WifiService,enableWifiConnectivityManager,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,Z>]",both
WifiService,factoryReset,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,getAllMatchingWifiConfigs,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/ScanResult>]",both
WifiService,getConfiguredNetworks,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getConnectionInfo,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,getCountryCode,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getCurrentNetwork,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getCurrentNetworkWpsNfcConfigurationToken,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getDhcpInfo,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getMatchingOsuProviders,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/ScanResult>]",both
WifiService,getMatchingWifiConfig,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/ScanResult>]",both
WifiService,getPasspointConfigurations,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getPrivilegedConfiguredNetworks,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getScanResults,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,getSupportedFeatures,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getVerboseLoggingLevel,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getWifiApConfiguration,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getWifiApEnabledState,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getWifiEnabledState,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,getWifiServiceMessenger,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,isDualBandSupported,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,isMulticastEnabled,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,isScanAlwaysAvailable,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,matchProviderWithCurrentNetwork,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,needs5GHzToAnyApBandConversion,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,notifyUserOfApBandConversion,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,queryPasspointIcon,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,J>, <Application,Ljava/lang/String>]",both
WifiService,reassociate,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,reconnect,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,registerSoftApCallback,4,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/IBinder>, <Application,Landroid/net/wifi/ISoftApCallback>, <Primordial,I>]",both
WifiService,releaseMulticastLock,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,releaseWifiLock,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/IBinder>]",both
WifiService,removeNetwork,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>, <Application,Ljava/lang/String>]",both
WifiService,removePasspointConfiguration,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
WifiService,reportActivityInfo,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,requestActivityInfo,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/ResultReceiver>]",both
WifiService,restoreBackupData,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,[B>]",both
WifiService,restoreSupplicantBackupData,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,[B>, <Primordial,[B>]",both
WifiService,retrieveBackupData,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,setCountryCode,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,setWifiApConfiguration,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/WifiConfiguration>, <Application,Ljava/lang/String>]",both
WifiService,setWifiEnabled,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
WifiService,startLocalOnlyHotspot,4,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/Messenger>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>]",both
WifiService,startScan,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",both
WifiService,startSoftAp,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/WifiConfiguration>]",both
WifiService,startSubscriptionProvisioning,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/hotspot2/OsuProvider>, <Application,Landroid/net/wifi/hotspot2/IProvisioningCallback>]",both
WifiService,startWatchLocalOnlyHotspot,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/Messenger>, <Application,Landroid/os/IBinder>]",both
WifiService,stopLocalOnlyHotspot,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,stopSoftAp,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,stopWatchLocalOnlyHotspot,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",both
WifiService,unregisterSoftApCallback,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>]",both
WifiService,updateInterfaceIpState,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Primordial,I>]",both
WifiService,updateWifiLockWorkSource,3,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/os/IBinder>, <Application,Landroid/os/WorkSource>]",both
ShortcutService$Lifecycle,addDynamicShortcuts,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ParceledListSlice>, <Primordial,I>]",both
ShortcutService$Lifecycle,applyRestore,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Primordial,[B>, <Primordial,I>]",both
ShortcutService$Lifecycle,createShortcutResultIntent,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ShortcutInfo>, <Primordial,I>]",both
ShortcutService$Lifecycle,disableShortcuts,6,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Ljava/util/List>, <Application,Ljava/lang/CharSequence>, <Primordial,I>, <Primordial,I>]",both
ShortcutService$Lifecycle,enableShortcuts,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Ljava/util/List>, <Primordial,I>]",both
ShortcutService$Lifecycle,getBackupPayload,2,"[<Application,Lcom/android/server/pm/ShortcutService>, <Primordial,I>]",both
ShortcutService$Lifecycle,getDynamicShortcuts,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,getIconMaxDimensions,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,getManifestShortcuts,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,getMaxShortcutCountPerActivity,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,getPinnedShortcuts,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,getRateLimitResetTime,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,getRemainingCallCount,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,isRequestPinItemSupported,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Primordial,I>, <Primordial,I>]",both
ShortcutService$Lifecycle,onApplicationActive,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,removeAllDynamicShortcuts,3,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,removeDynamicShortcuts,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Ljava/util/List>, <Primordial,I>]",both
ShortcutService$Lifecycle,reportShortcutUsed,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ShortcutService$Lifecycle,requestPinShortcut,5,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ShortcutInfo>, <Application,Landroid/content/IntentSender>, <Primordial,I>]",both
ShortcutService$Lifecycle,resetThrottling,1,"[<Application,Lcom/android/server/pm/ShortcutService>]",both
ShortcutService$Lifecycle,setDynamicShortcuts,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ParceledListSlice>, <Primordial,I>]",both
ShortcutService$Lifecycle,updateShortcuts,4,"[<Application,Lcom/android/server/pm/ShortcutService>, <Application,Ljava/lang/String>, <Application,Landroid/content/pm/ParceledListSlice>, <Primordial,I>]",both
BluetoothService,bindBluetoothProfileService,3,"[<Application,Lcom/android/server/BluetoothManagerService>, <Primordial,I>, <Application,Landroid/bluetooth/IBluetoothProfileServiceConnection>]",both
BluetoothService,disable,3,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
BluetoothService,enable,2,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Ljava/lang/String>]",both
BluetoothService,enableNoAutoConnect,2,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Ljava/lang/String>]",both
BluetoothService,getAddress,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,getBluetoothGatt,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,getName,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,getState,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,isBleAppPresent,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,isBleScanAlwaysAvailable,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,isEnabled,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",both
BluetoothService,registerAdapter,2,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Landroid/bluetooth/IBluetoothManagerCallback>]",both
BluetoothService,registerStateChangeCallback,2,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Landroid/bluetooth/IBluetoothStateChangeCallback>]",both
BluetoothService,unbindBluetoothProfileService,3,"[<Application,Lcom/android/server/BluetoothManagerService>, <Primordial,I>, <Application,Landroid/bluetooth/IBluetoothProfileServiceConnection>]",both
BluetoothService,unregisterAdapter,2,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Landroid/bluetooth/IBluetoothManagerCallback>]",both
BluetoothService,unregisterStateChangeCallback,2,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Landroid/bluetooth/IBluetoothStateChangeCallback>]",both
BluetoothService,updateBleAppCount,4,"[<Application,Lcom/android/server/BluetoothManagerService>, <Application,Landroid/os/IBinder>, <Primordial,Z>, <Application,Ljava/lang/String>]",both
FingerprintService,addClientActiveCallback,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/hardware/fingerprint/IFingerprintClientActiveCallback>]",both
FingerprintService,addLockoutResetCallback,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/hardware/fingerprint/IFingerprintServiceLockoutResetCallback>]",both
FingerprintService,authenticate,9,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>, <Primordial,J>, <Primordial,I>, <Application,Landroid/hardware/fingerprint/IFingerprintServiceReceiver>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>, <Application,Landroid/hardware/biometrics/IBiometricPromptReceiver>]",both
FingerprintService,cancelAuthentication,3,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>]",both
FingerprintService,cancelEnrollment,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>]",both
FingerprintService,enroll,7,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>, <Primordial,[B>, <Primordial,I>, <Application,Landroid/hardware/fingerprint/IFingerprintServiceReceiver>, <Primordial,I>, <Application,Ljava/lang/String>]",both
FingerprintService,enumerate,4,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Application,Landroid/hardware/fingerprint/IFingerprintServiceReceiver>]",both
FingerprintService,getAuthenticatorId,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Ljava/lang/String>]",both
FingerprintService,getEnrolledFingerprints,3,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Primordial,I>, <Application,Ljava/lang/String>]",both
FingerprintService,hasEnrolledFingerprints,3,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Primordial,I>, <Application,Ljava/lang/String>]",both
FingerprintService,isClientActive,1,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>]",both
FingerprintService,isHardwareDetected,3,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Primordial,J>, <Application,Ljava/lang/String>]",both
FingerprintService,postEnroll,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>]",both
FingerprintService,preEnroll,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>]",both
FingerprintService,remove,6,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Landroid/hardware/fingerprint/IFingerprintServiceReceiver>]",both
FingerprintService,removeClientActiveCallback,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/hardware/fingerprint/IFingerprintClientActiveCallback>]",both
FingerprintService,rename,4,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>]",both
FingerprintService,resetTimeout,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Primordial,[B>]",both
FingerprintService,setActiveUser,2,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Primordial,I>]",both
OverlayManagerService,getAllOverlays,2,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Primordial,I>]",both
OverlayManagerService,getOverlayInfo,3,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,I>]",both
OverlayManagerService,getOverlayInfosForTarget,3,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,I>]",both
OverlayManagerService,setEnabled,4,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",both
OverlayManagerService,setEnabledExclusive,4,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",both
OverlayManagerService,setEnabledExclusiveInCategory,3,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,I>]",both
OverlayManagerService,setHighestPriority,3,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,I>]",both
OverlayManagerService,setLowestPriority,3,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Primordial,I>]",both
OverlayManagerService,setPriority,4,"[<Application,Lcom/android/server/om/OverlayManagerService$1>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,acquireTvInputHardware,5,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>, <Application,Landroid/media/tv/ITvInputHardwareCallback>, <Application,Landroid/media/tv/TvInputInfo>, <Primordial,I>]",both
TvInputManagerService,addBlockedRating,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,captureFrame,5,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Application,Landroid/view/Surface>, <Application,Landroid/media/tv/TvStreamConfig>, <Primordial,I>]",both
TvInputManagerService,createOverlayView,5,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/os/IBinder>, <Application,Landroid/graphics/Rect>, <Primordial,I>]",both
TvInputManagerService,createSession,6,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/media/tv/ITvInputClient>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>, <Primordial,I>]",both
TvInputManagerService,dispatchSurfaceChanged,6,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Primordial,I>]",both
TvInputManagerService,getAvailableTvStreamConfigList,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,getBlockedRatings,2,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>]",both
TvInputManagerService,getDvbDeviceList,1,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>]",both
TvInputManagerService,getHardwareList,1,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>]",both
TvInputManagerService,getTvContentRatingSystemList,2,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>]",both
TvInputManagerService,getTvInputInfo,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,getTvInputList,2,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>]",both
TvInputManagerService,getTvInputState,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,isParentalControlsEnabled,2,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>]",both
TvInputManagerService,isRatingBlocked,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,isSingleSessionActive,2,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>]",both
TvInputManagerService,openDvbDevice,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/media/tv/DvbDeviceInfo>, <Primordial,I>]",both
TvInputManagerService,registerCallback,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/media/tv/ITvInputManagerCallback>, <Primordial,I>]",both
TvInputManagerService,relayoutOverlayView,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/graphics/Rect>, <Primordial,I>]",both
TvInputManagerService,releaseSession,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
TvInputManagerService,releaseTvInputHardware,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,I>, <Application,Landroid/media/tv/ITvInputHardware>, <Primordial,I>]",both
TvInputManagerService,removeBlockedRating,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,removeOverlayView,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
TvInputManagerService,requestChannelBrowsable,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/net/Uri>, <Primordial,I>]",both
TvInputManagerService,selectTrack,5,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,sendAppPrivateCommand,5,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
TvInputManagerService,sendTvInputNotifyIntent,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/content/Intent>, <Primordial,I>]",both
TvInputManagerService,setCaptionEnabled,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,Z>, <Primordial,I>]",both
TvInputManagerService,setMainSession,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
TvInputManagerService,setParentalControlsEnabled,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Primordial,Z>, <Primordial,I>]",both
TvInputManagerService,setSurface,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/view/Surface>, <Primordial,I>]",both
TvInputManagerService,setVolume,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,F>, <Primordial,I>]",both
TvInputManagerService,startRecording,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/net/Uri>, <Primordial,I>]",both
TvInputManagerService,stopRecording,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
TvInputManagerService,timeShiftEnablePositionTracking,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,Z>, <Primordial,I>]",both
TvInputManagerService,timeShiftPause,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
TvInputManagerService,timeShiftPlay,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/net/Uri>, <Primordial,I>]",both
TvInputManagerService,timeShiftResume,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
TvInputManagerService,timeShiftSeekTo,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Primordial,J>, <Primordial,I>]",both
TvInputManagerService,timeShiftSetPlaybackParams,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/media/PlaybackParams>, <Primordial,I>]",both
TvInputManagerService,tune,5,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Landroid/net/Uri>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
TvInputManagerService,unblockContent,4,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>, <Primordial,I>]",both
TvInputManagerService,unregisterCallback,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/media/tv/ITvInputManagerCallback>, <Primordial,I>]",both
TvInputManagerService,updateTvInputInfo,3,"[<Application,Lcom/android/server/tv/TvInputManagerService$BinderService>, <Application,Landroid/media/tv/TvInputInfo>, <Primordial,I>]",both
SearchManagerService$Lifecycle,getGlobalSearchActivities,1,"[<Application,Lcom/android/server/search/SearchManagerService>]",both
SearchManagerService$Lifecycle,getGlobalSearchActivity,1,"[<Application,Lcom/android/server/search/SearchManagerService>]",both
SearchManagerService$Lifecycle,getSearchableInfo,2,"[<Application,Lcom/android/server/search/SearchManagerService>, <Application,Landroid/content/ComponentName>]",both
SearchManagerService$Lifecycle,getSearchablesInGlobalSearch,1,"[<Application,Lcom/android/server/search/SearchManagerService>]",both
SearchManagerService$Lifecycle,getWebSearchActivity,1,"[<Application,Lcom/android/server/search/SearchManagerService>]",both
SearchManagerService$Lifecycle,launchAssist,2,"[<Application,Lcom/android/server/search/SearchManagerService>, <Application,Landroid/os/Bundle>]",both
SearchManagerService$Lifecycle,launchLegacyAssist,4,"[<Application,Lcom/android/server/search/SearchManagerService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/os/Bundle>]",both
WifiP2pService,checkConfigureWifiDisplayPermission,1,"[<Application,Lcom/android/server/wifi/p2p/WifiP2pServiceImpl>]",left_only
WifiP2pService,close,2,"[<Application,Lcom/android/server/wifi/p2p/WifiP2pServiceImpl>, <Application,Landroid/os/IBinder>]",left_only
WifiP2pService,getMessenger,2,"[<Application,Lcom/android/server/wifi/p2p/WifiP2pServiceImpl>, <Application,Landroid/os/IBinder>]",left_only
WifiP2pService,getP2pStateMachineMessenger,1,"[<Application,Lcom/android/server/wifi/p2p/WifiP2pServiceImpl>]",left_only
WifiP2pService,setMiracastMode,2,"[<Application,Lcom/android/server/wifi/p2p/WifiP2pServiceImpl>, <Primordial,I>]",left_only
ContextHubSystemService,createClient,3,"[<Application,Lcom/android/server/location/ContextHubService>, <Application,Landroid/hardware/location/IContextHubClientCallback>, <Primordial,I>]",both
ContextHubSystemService,disableNanoApp,4,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/IContextHubTransactionCallback>, <Primordial,J>]",both
ContextHubSystemService,enableNanoApp,4,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/IContextHubTransactionCallback>, <Primordial,J>]",both
ContextHubSystemService,findNanoAppOnHub,3,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/NanoAppFilter>]",both
ContextHubSystemService,getContextHubHandles,1,"[<Application,Lcom/android/server/location/ContextHubService>]",both
ContextHubSystemService,getContextHubInfo,2,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>]",both
ContextHubSystemService,getContextHubs,1,"[<Application,Lcom/android/server/location/ContextHubService>]",both
ContextHubSystemService,getNanoAppInstanceInfo,2,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>]",both
ContextHubSystemService,loadNanoApp,3,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/NanoApp>]",both
ContextHubSystemService,loadNanoAppOnHub,4,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/IContextHubTransactionCallback>, <Application,Landroid/hardware/location/NanoAppBinary>]",both
ContextHubSystemService,queryNanoApps,3,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/IContextHubTransactionCallback>]",both
ContextHubSystemService,registerCallback,2,"[<Application,Lcom/android/server/location/ContextHubService>, <Application,Landroid/hardware/location/IContextHubCallback>]",both
ContextHubSystemService,sendMessage,4,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Primordial,I>, <Application,Landroid/hardware/location/ContextHubMessage>]",both
ContextHubSystemService,unloadNanoApp,2,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>]",both
ContextHubSystemService,unloadNanoAppFromHub,4,"[<Application,Lcom/android/server/location/ContextHubService>, <Primordial,I>, <Application,Landroid/hardware/location/IContextHubTransactionCallback>, <Primordial,J>]",both
ContentService$Lifecycle,addPeriodicSync,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>, <Primordial,J>]",both
ContentService$Lifecycle,addStatusChangeListener,3,"[<Application,Lcom/android/server/content/ContentService>, <Primordial,I>, <Application,Landroid/content/ISyncStatusObserver>]",both
ContentService$Lifecycle,cancelRequest,2,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/content/SyncRequest>]",both
ContentService$Lifecycle,cancelSync,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>]",both
ContentService$Lifecycle,cancelSyncAsUser,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>, <Primordial,I>]",both
ContentService$Lifecycle,getCache,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Primordial,I>]",both
ContentService$Lifecycle,getCurrentSyncs,1,"[<Application,Lcom/android/server/content/ContentService>]",both
ContentService$Lifecycle,getCurrentSyncsAsUser,2,"[<Application,Lcom/android/server/content/ContentService>, <Primordial,I>]",both
ContentService$Lifecycle,getIsSyncable,3,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
ContentService$Lifecycle,getIsSyncableAsUser,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ContentService$Lifecycle,getMasterSyncAutomatically,1,"[<Application,Lcom/android/server/content/ContentService>]",both
ContentService$Lifecycle,getMasterSyncAutomaticallyAsUser,2,"[<Application,Lcom/android/server/content/ContentService>, <Primordial,I>]",both
ContentService$Lifecycle,getPeriodicSyncs,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>]",both
ContentService$Lifecycle,getSyncAdapterPackagesForAuthorityAsUser,3,"[<Application,Lcom/android/server/content/ContentService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ContentService$Lifecycle,getSyncAdapterTypes,1,"[<Application,Lcom/android/server/content/ContentService>]",both
ContentService$Lifecycle,getSyncAdapterTypesAsUser,2,"[<Application,Lcom/android/server/content/ContentService>, <Primordial,I>]",both
ContentService$Lifecycle,getSyncAutomatically,3,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>]",both
ContentService$Lifecycle,getSyncAutomaticallyAsUser,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ContentService$Lifecycle,getSyncStatus,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>]",both
ContentService$Lifecycle,getSyncStatusAsUser,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>, <Primordial,I>]",both
ContentService$Lifecycle,isSyncActive,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>]",both
ContentService$Lifecycle,isSyncPending,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>]",both
ContentService$Lifecycle,isSyncPendingAsUser,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/content/ComponentName>, <Primordial,I>]",both
ContentService$Lifecycle,notifyChange,7,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/net/Uri>, <Application,Landroid/database/IContentObserver>, <Primordial,Z>, <Primordial,I>, <Primordial,I>, <Primordial,I>]",both
ContentService$Lifecycle,notifyChange,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/net/Uri>, <Application,Landroid/database/IContentObserver>, <Primordial,Z>, <Primordial,Z>]",both
ContentService$Lifecycle,putCache,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
ContentService$Lifecycle,registerContentObserver,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/net/Uri>, <Primordial,Z>, <Application,Landroid/database/IContentObserver>]",both
ContentService$Lifecycle,registerContentObserver,6,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/net/Uri>, <Primordial,Z>, <Application,Landroid/database/IContentObserver>, <Primordial,I>, <Primordial,I>]",both
ContentService$Lifecycle,removePeriodicSync,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>]",both
ContentService$Lifecycle,removeStatusChangeListener,2,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/content/ISyncStatusObserver>]",both
ContentService$Lifecycle,requestSync,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>]",both
ContentService$Lifecycle,resetTodayStats,1,"[<Application,Lcom/android/server/content/ContentService>]",both
ContentService$Lifecycle,setIsSyncable,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,I>]",both
ContentService$Lifecycle,setMasterSyncAutomatically,2,"[<Application,Lcom/android/server/content/ContentService>, <Primordial,Z>]",both
ContentService$Lifecycle,setMasterSyncAutomaticallyAsUser,3,"[<Application,Lcom/android/server/content/ContentService>, <Primordial,Z>, <Primordial,I>]",both
ContentService$Lifecycle,setSyncAutomatically,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
ContentService$Lifecycle,setSyncAutomaticallyAsUser,5,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",both
ContentService$Lifecycle,sync,2,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/content/SyncRequest>]",both
ContentService$Lifecycle,syncAsUser,3,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/content/SyncRequest>, <Primordial,I>]",both
ContentService$Lifecycle,unregisterContentObserver,2,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/database/IContentObserver>]",both
IpConnectivityMetrics,addNetdEventCallback,3,"[<Application,Lcom/android/server/connectivity/IpConnectivityMetrics$Impl>, <Primordial,I>, <Application,Landroid/net/INetdEventCallback>]",both
IpConnectivityMetrics,logEvent,2,"[<Application,Lcom/android/server/connectivity/IpConnectivityMetrics$Impl>, <Application,Landroid/net/ConnectivityMetricsEvent>]",both
IpConnectivityMetrics,removeNetdEventCallback,2,"[<Application,Lcom/android/server/connectivity/IpConnectivityMetrics$Impl>, <Primordial,I>]",both
TextServicesManagerService$Lifecycle,finishSpellCheckerService,2,"[<Application,Lcom/android/server/TextServicesManagerService>, <Application,Lcom/android/internal/textservice/ISpellCheckerSessionListener>]",both
TextServicesManagerService$Lifecycle,getCurrentSpellChecker,2,"[<Application,Lcom/android/server/TextServicesManagerService>, <Application,Ljava/lang/String>]",both
TextServicesManagerService$Lifecycle,getCurrentSpellCheckerSubtype,3,"[<Application,Lcom/android/server/TextServicesManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
TextServicesManagerService$Lifecycle,getEnabledSpellCheckers,1,"[<Application,Lcom/android/server/TextServicesManagerService>]",both
TextServicesManagerService$Lifecycle,getSpellCheckerService,6,"[<Application,Lcom/android/server/TextServicesManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Lcom/android/internal/textservice/ITextServicesSessionListener>, <Application,Lcom/android/internal/textservice/ISpellCheckerSessionListener>, <Application,Landroid/os/Bundle>]",both
TextServicesManagerService$Lifecycle,isSpellCheckerEnabled,1,"[<Application,Lcom/android/server/TextServicesManagerService>]",both
AudioService$Lifecycle,adjustSuggestedStreamVolume,7,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AudioService$Lifecycle,setStreamVolume,7,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AudioService$Lifecycle,abandonAudioFocus,5,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IAudioFocusDispatcher>, <Application,Ljava/lang/String>, <Application,Landroid/media/AudioAttributes>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,addMixForPolicy,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/audiopolicy/AudioPolicyConfig>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>]",both
AudioService$Lifecycle,adjustStreamVolume,5,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,adjustStreamVolume,7,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AudioService$Lifecycle,adjustSuggestedStreamVolume,6,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,avrcpSupportsAbsoluteVolume,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
AudioService$Lifecycle,disableRingtoneSync,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,disableSafeMediaVolume,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,dispatchFocusChange,4,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/AudioFocusInfo>, <Primordial,I>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>]",both
AudioService$Lifecycle,forceRemoteSubmixFullVolume,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>, <Application,Landroid/os/IBinder>]",both
AudioService$Lifecycle,forceVolumeControlStream,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Landroid/os/IBinder>]",both
AudioService$Lifecycle,getActivePlaybackConfigurations,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getActiveRecordingConfigurations,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getCurrentAudioFocus,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getFocusRampTimeMs,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Landroid/media/AudioAttributes>]",both
AudioService$Lifecycle,getLastAudibleStreamVolume,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,getMode,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getRingerModeExternal,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getRingerModeInternal,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getRingtonePlayer,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getStreamMaxVolume,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,getStreamMinVolume,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,getStreamVolume,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,getUiSoundsStreamType,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,getVibrateSetting,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,handleBluetoothA2dpDeviceConfigChange,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/bluetooth/BluetoothDevice>]",both
AudioService$Lifecycle,isAudioServerRunning,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isBluetoothA2dpOn,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isBluetoothScoOn,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isCameraSoundForced,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isHdmiSystemAudioSupported,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isMasterMute,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isSpeakerphoneOn,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,isStreamAffectedByMute,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,isStreamAffectedByRingerMode,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,isStreamMute,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,isValidRingerMode,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,loadSoundEffects,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,notifyVolumeControllerVisible,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IVolumeController>, <Primordial,Z>]",both
AudioService$Lifecycle,playSoundEffect,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,playSoundEffectVolume,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,F>]",both
AudioService$Lifecycle,playerAttributes,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Landroid/media/AudioAttributes>]",both
AudioService$Lifecycle,playerEvent,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>]",both
AudioService$Lifecycle,playerHasOpPlayAudio,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,Z>]",both
AudioService$Lifecycle,registerAudioPolicy,6,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/audiopolicy/AudioPolicyConfig>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>]",both
AudioService$Lifecycle,registerAudioServerStateDispatcher,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IAudioServerStateDispatcher>]",both
AudioService$Lifecycle,registerPlaybackCallback,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IPlaybackConfigDispatcher>]",both
AudioService$Lifecycle,registerRecordingCallback,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IRecordingConfigDispatcher>]",both
AudioService$Lifecycle,releasePlayer,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,reloadAudioSettings,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,removeMixForPolicy,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/audiopolicy/AudioPolicyConfig>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>]",both
AudioService$Lifecycle,requestAudioFocus,10,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/AudioAttributes>, <Primordial,I>, <Application,Landroid/os/IBinder>, <Application,Landroid/media/IAudioFocusDispatcher>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>, <Primordial,I>]",both
AudioService$Lifecycle,setBluetoothA2dpDeviceConnectionState,4,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/bluetooth/BluetoothDevice>, <Primordial,I>, <Primordial,I>]",both
AudioService$Lifecycle,setBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent,6,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/bluetooth/BluetoothDevice>, <Primordial,I>, <Primordial,I>, <Primordial,Z>, <Primordial,I>]",both
AudioService$Lifecycle,setBluetoothA2dpOn,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>]",both
AudioService$Lifecycle,setBluetoothHearingAidDeviceConnectionState,5,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/bluetooth/BluetoothDevice>, <Primordial,I>, <Primordial,Z>, <Primordial,I>]",left_only
AudioService$Lifecycle,setBluetoothScoOn,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>]",both
AudioService$Lifecycle,setFocusPropertiesForPolicy,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>]",both
AudioService$Lifecycle,setFocusRequestResultFromExtPolicy,4,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/AudioFocusInfo>, <Primordial,I>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>]",both
AudioService$Lifecycle,setHdmiSystemAudioSupported,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>]",both
AudioService$Lifecycle,setMasterMute,5,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AudioService$Lifecycle,setMicrophoneMute,4,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>, <Application,Ljava/lang/String>, <Primordial,I>]",both
AudioService$Lifecycle,setMode,4,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Landroid/os/IBinder>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,setRingerModeExternal,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,setRingerModeInternal,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,setRingtonePlayer,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IRingtonePlayer>]",both
AudioService$Lifecycle,setSpeakerphoneOn,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,Z>]",both
AudioService$Lifecycle,setStreamVolume,5,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,setVibrateSetting,3,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>]",both
AudioService$Lifecycle,setVolumeController,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IVolumeController>]",both
AudioService$Lifecycle,setVolumePolicy,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/VolumePolicy>]",both
AudioService$Lifecycle,setWiredDeviceConnectionState,6,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,shouldVibrate,2,"[<Application,Lcom/android/server/audio/AudioService>, <Primordial,I>]",both
AudioService$Lifecycle,startBluetoothSco,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/os/IBinder>, <Primordial,I>]",both
AudioService$Lifecycle,startBluetoothScoVirtualCall,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/os/IBinder>]",both
AudioService$Lifecycle,startWatchingRoutes,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IAudioRoutesObserver>]",both
AudioService$Lifecycle,stopBluetoothSco,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/os/IBinder>]",both
AudioService$Lifecycle,trackPlayer,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/PlayerBase$PlayerIdCard>]",both
AudioService$Lifecycle,unloadSoundEffects,1,"[<Application,Lcom/android/server/audio/AudioService>]",both
AudioService$Lifecycle,unregisterAudioFocusClient,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Ljava/lang/String>]",both
AudioService$Lifecycle,unregisterAudioPolicyAsync,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/audiopolicy/IAudioPolicyCallback>]",both
AudioService$Lifecycle,unregisterAudioServerStateDispatcher,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IAudioServerStateDispatcher>]",both
AudioService$Lifecycle,unregisterPlaybackCallback,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IPlaybackConfigDispatcher>]",both
AudioService$Lifecycle,unregisterRecordingCallback,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/media/IRecordingConfigDispatcher>]",both
UsageStatsService,getAppStandbyBucket,4,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsageStatsService,getAppStandbyBuckets,3,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsageStatsService,isAppInactive,3,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>]",both
UsageStatsService,onCarrierPrivilegedAppsChanged,1,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>]",both
UsageStatsService,queryConfigurationStats,5,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,I>, <Primordial,J>, <Primordial,J>, <Application,Ljava/lang/String>]",both
UsageStatsService,queryEventStats,5,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,I>, <Primordial,J>, <Primordial,J>, <Application,Ljava/lang/String>]",both
UsageStatsService,queryEvents,4,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,J>, <Primordial,J>, <Application,Ljava/lang/String>]",both
UsageStatsService,queryEventsForPackage,4,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,J>, <Primordial,J>, <Application,Ljava/lang/String>]",both
UsageStatsService,queryEventsForPackageForUser,6,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,J>, <Primordial,J>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
UsageStatsService,queryEventsForUser,5,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,J>, <Primordial,J>, <Primordial,I>, <Application,Ljava/lang/String>]",both
UsageStatsService,queryUsageStats,5,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,I>, <Primordial,J>, <Primordial,J>, <Application,Ljava/lang/String>]",both
UsageStatsService,registerAppUsageObserver,6,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,I>, <Application,[Ljava/lang/String>, <Primordial,J>, <Application,Landroid/app/PendingIntent>, <Application,Ljava/lang/String>]",both
UsageStatsService,reportChooserSelection,6,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,[Ljava/lang/String>, <Application,Ljava/lang/String>]",both
UsageStatsService,setAppInactive,4,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",both
UsageStatsService,setAppStandbyBucket,4,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>]",both
UsageStatsService,setAppStandbyBuckets,3,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Landroid/content/pm/ParceledListSlice>, <Primordial,I>]",both
UsageStatsService,unregisterAppUsageObserver,3,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,I>, <Application,Ljava/lang/String>]",both
UsageStatsService,whitelistAppTemporarily,4,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Application,Ljava/lang/String>, <Primordial,J>, <Primordial,I>]",both
EthernetService,addListener,2,"[<Application,Lcom/android/server/ethernet/EthernetServiceImpl>, <Application,Landroid/net/IEthernetServiceListener>]",both
EthernetService,getAvailableInterfaces,1,"[<Application,Lcom/android/server/ethernet/EthernetServiceImpl>]",both
EthernetService,getConfiguration,2,"[<Application,Lcom/android/server/ethernet/EthernetServiceImpl>, <Application,Ljava/lang/String>]",both
EthernetService,isAvailable,2,"[<Application,Lcom/android/server/ethernet/EthernetServiceImpl>, <Application,Ljava/lang/String>]",both
EthernetService,removeListener,2,"[<Application,Lcom/android/server/ethernet/EthernetServiceImpl>, <Application,Landroid/net/IEthernetServiceListener>]",both
EthernetService,setConfiguration,3,"[<Application,Lcom/android/server/ethernet/EthernetServiceImpl>, <Application,Ljava/lang/String>, <Application,Landroid/net/IpConfiguration>]",both
NetworkScoreService$Lifecycle,clearScores,1,"[<Application,Lcom/android/server/NetworkScoreService>]",both
NetworkScoreService$Lifecycle,disableScoring,1,"[<Application,Lcom/android/server/NetworkScoreService>]",both
NetworkScoreService$Lifecycle,getActiveScorer,1,"[<Application,Lcom/android/server/NetworkScoreService>]",both
NetworkScoreService$Lifecycle,getActiveScorerPackage,1,"[<Application,Lcom/android/server/NetworkScoreService>]",both
NetworkScoreService$Lifecycle,getAllValidScorers,1,"[<Application,Lcom/android/server/NetworkScoreService>]",both
NetworkScoreService$Lifecycle,isCallerActiveScorer,2,"[<Application,Lcom/android/server/NetworkScoreService>, <Primordial,I>]",both
NetworkScoreService$Lifecycle,registerNetworkScoreCache,4,"[<Application,Lcom/android/server/NetworkScoreService>, <Primordial,I>, <Application,Landroid/net/INetworkScoreCache>, <Primordial,I>]",both
NetworkScoreService$Lifecycle,requestScores,2,"[<Application,Lcom/android/server/NetworkScoreService>, <Application,[Landroid/net/NetworkKey>]",both
NetworkScoreService$Lifecycle,setActiveScorer,2,"[<Application,Lcom/android/server/NetworkScoreService>, <Application,Ljava/lang/String>]",both
NetworkScoreService$Lifecycle,unregisterNetworkScoreCache,3,"[<Application,Lcom/android/server/NetworkScoreService>, <Primordial,I>, <Application,Landroid/net/INetworkScoreCache>]",both
NetworkScoreService$Lifecycle,updateScores,2,"[<Application,Lcom/android/server/NetworkScoreService>, <Application,[Landroid/net/ScoredNetwork>]",both
MediaSessionService,addSessionTokensListener,4,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/ISessionTokensListener>, <Primordial,I>, <Application,Ljava/lang/String>]",both
MediaSessionService,addSessionsListener,4,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/session/IActiveSessionsListener>, <Application,Landroid/content/ComponentName>, <Primordial,I>]",both
MediaSessionService,createSession,5,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Ljava/lang/String>, <Application,Landroid/media/session/ISessionCallback>, <Application,Ljava/lang/String>, <Primordial,I>]",both
MediaSessionService,createSession2,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/os/Bundle>]",both
MediaSessionService,destroySession2,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/os/Bundle>]",both
MediaSessionService,dispatchAdjustVolume,5,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>, <Primordial,I>]",both
MediaSessionService,dispatchMediaKeyEvent,5,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/view/KeyEvent>, <Primordial,Z>]",both
MediaSessionService,dispatchVolumeKeyEvent,6,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Ljava/lang/String>, <Primordial,Z>, <Application,Landroid/view/KeyEvent>, <Primordial,I>, <Primordial,Z>]",both
MediaSessionService,getSessionTokens,4,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Primordial,Z>, <Primordial,Z>, <Application,Ljava/lang/String>]",both
MediaSessionService,getSessions,3,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/content/ComponentName>, <Primordial,I>]",both
MediaSessionService,isGlobalPriorityActive,1,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>]",both
MediaSessionService,isTrusted,4,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>]",both
MediaSessionService,removeSessionTokensListener,3,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/ISessionTokensListener>, <Application,Ljava/lang/String>]",both
MediaSessionService,removeSessionsListener,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/session/IActiveSessionsListener>]",both
MediaSessionService,setCallback,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/session/ICallback>]",both
MediaSessionService,setOnMediaKeyListener,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/session/IOnMediaKeyListener>]",both
MediaSessionService,setOnVolumeKeyLongPressListener,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/session/IOnVolumeKeyLongPressListener>]",both
MediaSessionService,setRemoteVolumeController,2,"[<Application,Lcom/android/server/media/MediaSessionService$SessionManagerImpl>, <Application,Landroid/media/IRemoteVolumeController>]",both
MmsServiceBroker,addMultimediaMessageDraft,3,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>]",both
MmsServiceBroker,addTextMessageDraft,4,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
MmsServiceBroker,archiveStoredConversation,4,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Primordial,J>, <Primordial,Z>]",both
MmsServiceBroker,deleteStoredConversation,3,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Primordial,J>]",both
MmsServiceBroker,deleteStoredMessage,3,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>]",both
MmsServiceBroker,downloadMessage,7,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Landroid/os/Bundle>, <Application,Landroid/app/PendingIntent>]",both
MmsServiceBroker,getAutoPersisting,1,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>]",both
MmsServiceBroker,getCarrierConfigValues,2,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Primordial,I>]",both
MmsServiceBroker,importMultimediaMessage,7,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Ljava/lang/String>, <Primordial,J>, <Primordial,Z>, <Primordial,Z>]",both
MmsServiceBroker,importTextMessage,8,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>, <Application,Ljava/lang/String>, <Primordial,J>, <Primordial,Z>, <Primordial,Z>]",both
MmsServiceBroker,sendMessage,7,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Ljava/lang/String>, <Application,Landroid/os/Bundle>, <Application,Landroid/app/PendingIntent>]",both
MmsServiceBroker,sendStoredMessage,6,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Primordial,I>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Landroid/os/Bundle>, <Application,Landroid/app/PendingIntent>]",both
MmsServiceBroker,setAutoPersisting,3,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Primordial,Z>]",both
MmsServiceBroker,updateStoredMessageStatus,4,"[<Application,Lcom/android/server/MmsServiceBroker$BinderService>, <Application,Ljava/lang/String>, <Application,Landroid/net/Uri>, <Application,Landroid/content/ContentValues>]",both
BackupManagerService$Lifecycle,acknowledgeFullBackupOrRestore,6,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,I>, <Primordial,Z>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Landroid/app/backup/IFullBackupRestoreObserver>]",both
BackupManagerService$Lifecycle,adbBackup,11,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Landroid/os/ParcelFileDescriptor>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>, <Primordial,Z>, <Application,[Ljava/lang/String>]",both
BackupManagerService$Lifecycle,adbRestore,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Landroid/os/ParcelFileDescriptor>]",both
BackupManagerService$Lifecycle,agentConnected,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>, <Application,Landroid/os/IBinder>]",both
BackupManagerService$Lifecycle,agentDisconnected,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,backupNow,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,beginRestoreSession,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,cancelBackups,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,clearBackupData,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,dataChanged,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,filterAppsEligibleForBackup,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,[Ljava/lang/String>]",both
BackupManagerService$Lifecycle,fullTransportBackup,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,[Ljava/lang/String>]",both
BackupManagerService$Lifecycle,getAvailableRestoreToken,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,getConfigurationIntent,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,getCurrentTransport,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,getDataManagementIntent,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,getDataManagementLabel,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,getDestinationString,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,getTransportWhitelist,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,hasBackupPassword,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,isAppEligibleForBackup,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,isBackupEnabled,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,isBackupServiceActive,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,I>]",both
BackupManagerService$Lifecycle,listAllTransportComponents,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,listAllTransports,1,"[<Application,Lcom/android/server/backup/Trampoline>]",both
BackupManagerService$Lifecycle,opComplete,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,I>, <Primordial,J>]",both
BackupManagerService$Lifecycle,requestBackup,5,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,[Ljava/lang/String>, <Application,Landroid/app/backup/IBackupObserver>, <Application,Landroid/app/backup/IBackupManagerMonitor>, <Primordial,I>]",both
BackupManagerService$Lifecycle,restoreAtInstall,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>, <Primordial,I>]",both
BackupManagerService$Lifecycle,selectBackupTransport,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,selectBackupTransportAsync,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Landroid/content/ComponentName>, <Application,Landroid/app/backup/ISelectBackupTransportCallback>]",both
BackupManagerService$Lifecycle,setAutoRestore,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,Z>]",both
BackupManagerService$Lifecycle,setBackupEnabled,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,Z>]",both
BackupManagerService$Lifecycle,setBackupPassword,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
BackupManagerService$Lifecycle,setBackupProvisioned,2,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,Z>]",both
BackupManagerService$Lifecycle,setBackupServiceActive,3,"[<Application,Lcom/android/server/backup/Trampoline>, <Primordial,I>, <Primordial,Z>]",both
BackupManagerService$Lifecycle,updateTransportAttributes,7,"[<Application,Lcom/android/server/backup/Trampoline>, <Application,Landroid/content/ComponentName>, <Application,Ljava/lang/String>, <Application,Landroid/content/Intent>, <Application,Ljava/lang/String>, <Application,Landroid/content/Intent>, <Application,Ljava/lang/String>]",both
MidiService$Lifecycle,closeDevice,3,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/os/IBinder>, <Application,Landroid/os/IBinder>]",both
MidiService$Lifecycle,getDeviceStatus,2,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/media/midi/MidiDeviceInfo>]",both
MidiService$Lifecycle,getDevices,1,"[<Application,Lcom/android/server/midi/MidiService>]",both
MidiService$Lifecycle,getServiceDeviceInfo,3,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",both
MidiService$Lifecycle,openBluetoothDevice,4,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/os/IBinder>, <Application,Landroid/bluetooth/BluetoothDevice>, <Application,Landroid/media/midi/IMidiDeviceOpenCallback>]",both
MidiService$Lifecycle,openDevice,4,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/os/IBinder>, <Application,Landroid/media/midi/MidiDeviceInfo>, <Application,Landroid/media/midi/IMidiDeviceOpenCallback>]",both
MidiService$Lifecycle,registerDeviceServer,8,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/media/midi/IMidiDeviceServer>, <Primordial,I>, <Primordial,I>, <Application,[Ljava/lang/String>, <Application,[Ljava/lang/String>, <Application,Landroid/os/Bundle>, <Primordial,I>]",both
MidiService$Lifecycle,registerListener,3,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/os/IBinder>, <Application,Landroid/media/midi/IMidiDeviceListener>]",both
MidiService$Lifecycle,setDeviceStatus,3,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/media/midi/IMidiDeviceServer>, <Application,Landroid/media/midi/MidiDeviceStatus>]",both
MidiService$Lifecycle,unregisterDeviceServer,2,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/media/midi/IMidiDeviceServer>]",both
MidiService$Lifecycle,unregisterListener,3,"[<Application,Lcom/android/server/midi/MidiService>, <Application,Landroid/os/IBinder>, <Application,Landroid/media/midi/IMidiDeviceListener>]",both
NotificationManagerService,buzzBeepBlinkForNotification,2,"[<Application,Lcom/android/server/notification/NotificationManagerService$10>, <Application,Ljava/lang/String>]",right_only
LockSettingsService$Lifecycle,checkPrivacyPasswordPattern,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
LockSettingsService$Lifecycle,getPassword,1,"[<Application,Lcom/android/server/locksettings/LockSettingsService>]",right_only
LockSettingsService$Lifecycle,sanitizePassword,1,"[<Application,Lcom/android/server/locksettings/LockSettingsService>]",right_only
LockSettingsService$Lifecycle,savePrivacyPasswordPattern,4,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
LockSettingsService$Lifecycle,setRawLockPassword,3,"[<Application,Lcom/android/server/locksettings/LockSettingsService>, <Primordial,[B>, <Primordial,I>]",right_only
SystemServerInjector,activityResume,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Landroid/content/Intent>]",right_only
SystemServerInjector,addAccessControlPass,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,addAccessControlPassForUser,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,addMiuiFirewallSharedUid,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,areNotificationsEnabledForPackage,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,checkAccessControlPass,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Landroid/content/Intent>]",right_only
SystemServerInjector,checkAccessControlPassAsUser,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Landroid/content/Intent>, <Primordial,I>]",right_only
SystemServerInjector,checkAccessControlPassword,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,checkAllowStartActivity,5,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Application,Landroid/content/Intent>, <Primordial,I>]",right_only
SystemServerInjector,checkGameBoosterAntimsgPassAsUser,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Landroid/content/Intent>, <Primordial,I>]",right_only
SystemServerInjector,checkSmsBlocked,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Landroid/content/Intent>]",right_only
SystemServerInjector,finishAccessControl,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,getAccessControlPasswordType,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,getAllPrivacyApps,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,getAppPermissionControlOpen,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,getAppRunningControlIBinder,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getApplicationAccessControlEnabled,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,getApplicationAccessControlEnabledAsUser,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,getApplicationChildrenControlEnabled,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,getApplicationMaskNotificationEnabledAsUser,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,getCurrentUserId,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getGameMode,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,getIncompatibleAppList,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getPackageNameByPid,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,getSecondSpaceId,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getStickWindowName,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,getSysAppCracked,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getTopActivity,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getWakePathCallListLog,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,getWakePathComponents,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,getWakeUpTime,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,grantInstallPermission,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,grantRuntimePermission,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,haveAccessControlPassword,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,isAllowStartService,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Landroid/content/Intent>, <Primordial,I>]",right_only
SystemServerInjector,isAppHide,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,isAppPrivacyEnabled,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,isFunctionOpen,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,isPrivacyApp,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,isRestrictedAppNet,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,isValidDevice,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,killNativePackageProcesses,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,moveTaskToStack,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>, <Primordial,I>, <Primordial,Z>]",right_only
SystemServerInjector,needFinishAccessControl,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Landroid/os/IBinder>]",right_only
SystemServerInjector,notifyAppsPreInstalled,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,offerGoogleBaseCallBack,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Lmiui/security/ISecurityCallback>]",right_only
SystemServerInjector,pushUpdatePkgsData,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/util/List>, <Primordial,Z>]",right_only
SystemServerInjector,pushWakePathConfirmDialogWhiteList,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>, <Application,Ljava/util/List>]",right_only
SystemServerInjector,pushWakePathData,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>, <Application,Landroid/content/pm/ParceledListSlice>, <Primordial,I>]",right_only
SystemServerInjector,pushWakePathWhiteList,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/util/List>, <Primordial,I>]",right_only
SystemServerInjector,putSystemDataStringFile,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,readSystemDataStringFile,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,removeAccessControlPass,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,removeAccessControlPassAsUser,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,removeWakePathData,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,resizeTask,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>, <Application,Landroid/graphics/Rect>, <Primordial,I>]",right_only
SystemServerInjector,saveIcon,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Landroid/graphics/Bitmap>]",right_only
SystemServerInjector,setAccessControlPassword,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,setAppHide,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,Z>]",right_only
SystemServerInjector,setAppPermissionControlOpen,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,setAppPrivacyStatus,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>]",right_only
SystemServerInjector,setApplicationAccessControlEnabled,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>]",right_only
SystemServerInjector,setApplicationAccessControlEnabledForUser,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",right_only
SystemServerInjector,setApplicationChildrenControlEnabled,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>]",right_only
SystemServerInjector,setApplicationMaskNotificationEnabledForUser,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,Z>, <Primordial,I>]",right_only
SystemServerInjector,setCoreRuntimePermissionEnabled,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,Z>, <Primordial,I>]",right_only
SystemServerInjector,setCurrentNetworkState,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,I>]",right_only
SystemServerInjector,setGameBoosterIBinder,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Primordial,Z>]",right_only
SystemServerInjector,setIncompatibleAppList,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/util/List>]",right_only
SystemServerInjector,setMiuiFirewallRule,5,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,I>, <Primordial,I>]",right_only
SystemServerInjector,setNotificationsEnabledForPackage,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",right_only
SystemServerInjector,setPrivacyApp,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>]",right_only
SystemServerInjector,setStickWindowName,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>]",right_only
SystemServerInjector,setTrackWakePathCallListLogEnabled,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,Z>]",right_only
SystemServerInjector,setWakeUpTime,3,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Primordial,J>]",right_only
SystemServerInjector,startInterceptSmsBySender,4,"[<Application,Lcom/miui/server/SecurityManagerService>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
SystemServerInjector,stopInterceptSmsBySender,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,watchGreenGuardProcess,1,"[<Application,Lcom/miui/server/SecurityManagerService>]",right_only
SystemServerInjector,writeAppHideConfig,2,"[<Application,Lcom/miui/server/SecurityManagerService>, <Primordial,Z>]",right_only
EnterpriseManagerService,getService,2,"[<Application,Lcom/miui/server/enterprise/EnterpriseManagerService>, <Application,Ljava/lang/String>]",right_only
NetworkWatchlistService$Lifecycle,getWatchlistConfigHash,1,"[<Application,Lcom/android/server/net/watchlist/NetworkWatchlistService>]",right_only
NetworkWatchlistService$Lifecycle,reloadWatchlist,1,"[<Application,Lcom/android/server/net/watchlist/NetworkWatchlistService>]",right_only
NetworkWatchlistService$Lifecycle,reportWatchlistIfNecessary,1,"[<Application,Lcom/android/server/net/watchlist/NetworkWatchlistService>]",right_only
NetworkWatchlistService$Lifecycle,startWatchlistLogging,1,"[<Application,Lcom/android/server/net/watchlist/NetworkWatchlistService>]",right_only
NetworkWatchlistService$Lifecycle,stopWatchlistLogging,1,"[<Application,Lcom/android/server/net/watchlist/NetworkWatchlistService>]",right_only
WifiService,dppAddBootstrapQrCode,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",right_only
WifiService,dppBootstrapGenerate,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/WifiDppConfig>]",right_only
WifiService,dppBootstrapRemove,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>]",right_only
WifiService,dppConfiguratorAdd,4,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
WifiService,dppConfiguratorGetKey,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>]",right_only
WifiService,dppConfiguratorRemove,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>]",right_only
WifiService,dppGetUri,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,I>]",right_only
WifiService,dppListen,5,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>, <Primordial,I>, <Primordial,Z>, <Primordial,Z>]",right_only
WifiService,dppStartAuth,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Landroid/net/wifi/WifiDppConfig>]",right_only
WifiService,dppStopListen,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",right_only
WifiService,enableWifiCoverageExtendFeature,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Primordial,Z>]",right_only
WifiService,getCapabilities,2,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>, <Application,Ljava/lang/String>]",right_only
WifiService,isExtendingWifi,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",right_only
WifiService,isWifiCoverageExtendFeatureEnabled,1,"[<Application,Lcom/android/server/wifi/WifiServiceImpl>]",right_only
CameraManager,calibrationMotor,1,"[<Application,Lcom/miui/server/popupcamera/PopupCameraManagerService>]",right_only
CameraManager,getMotorStatus,1,"[<Application,Lcom/miui/server/popupcamera/PopupCameraManagerService>]",right_only
CameraManager,getPopupCameraState,1,"[<Application,Lcom/miui/server/popupcamera/PopupCameraManagerService>]",right_only
CameraManager,notifyCameraStatus,4,"[<Application,Lcom/miui/server/popupcamera/PopupCameraManagerService>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>]",right_only
CameraManager,popupMotor,1,"[<Application,Lcom/miui/server/popupcamera/PopupCameraManagerService>]",right_only
CameraManager,takebackMotor,1,"[<Application,Lcom/miui/server/popupcamera/PopupCameraManagerService>]",right_only
BluetoothService,factoryReset,1,"[<Application,Lcom/android/server/BluetoothManagerService>]",right_only
FingerprintService,extCmd,6,"[<Application,Lcom/android/server/fingerprint/FingerprintService$FingerprintServiceWrapper>, <Application,Landroid/os/IBinder>, <Primordial,I>, <Primordial,I>, <Primordial,I>, <Application,Ljava/lang/String>]",right_only
ContentService$Lifecycle,getMiSyncPauseToTime,3,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Primordial,I>]",right_only
ContentService$Lifecycle,getMiSyncStrategy,3,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Primordial,I>]",right_only
ContentService$Lifecycle,setMiSyncPauseToTime,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Primordial,J>, <Primordial,I>]",right_only
ContentService$Lifecycle,setMiSyncStrategy,4,"[<Application,Lcom/android/server/content/ContentService>, <Application,Landroid/accounts/Account>, <Primordial,I>, <Primordial,I>]",right_only
AudioService$Lifecycle,createAudioRecordForLoopback,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/os/ParcelFileDescriptor>, <Primordial,J>]",right_only
AudioService$Lifecycle,getNotificationUri,2,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Ljava/lang/String>]",right_only
AudioService$Lifecycle,setHearingAidDeviceConnectionState,3,"[<Application,Lcom/android/server/audio/AudioService>, <Application,Landroid/bluetooth/BluetoothDevice>, <Primordial,I>]",right_only
UsageStatsService,queryUsageStatsAsUser,6,"[<Application,Lcom/android/server/usage/UsageStatsService$BinderService>, <Primordial,I>, <Primordial,J>, <Primordial,J>, <Application,Ljava/lang/String>, <Primordial,I>]",right_only
